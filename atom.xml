<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>朴实的一线码农</title>
  <subtitle>十年磨一剑，一步一步脚踏实地的耕种</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.grdtechs.com/"/>
  <updated>2016-02-18T03:28:08.000Z</updated>
  <id>http://www.grdtechs.com/</id>
  
  <author>
    <name>Lee Hong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang 并发concurrency 使用总结</title>
    <link href="http://www.grdtechs.com/2016/02/17/go-concurrency-summarize/"/>
    <id>http://www.grdtechs.com/2016/02/17/go-concurrency-summarize/</id>
    <published>2016-02-17T05:47:51.000Z</published>
    <updated>2016-02-18T03:28:08.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;go能处理高并发的根本原因在于执行go协程只需极少的栈内存(大概4~5KB),并且能根据需要动态增长和缩减占用的资源。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u9AD8_u5E76_u53D1_u7684_u672C_u8D28goroutine&quot;&gt;&lt;a href=&quot;#u9AD8_u5E76_u53D1_u7684_u672C_u8D28goroutine&quot; class=&quot;headerlink&quot; title=&quot;高并发的本质goroutine&quot;&gt;&lt;/a&gt;高并发的本质goroutine&lt;/h2&gt;&lt;p&gt;简单而言,&lt;code&gt;goroutine&lt;/code&gt;就是一段代码，一个函数入口，以及在堆上为其分配的一个堆栈。所以它非常廉价，我们可以很轻松的创建上万个&lt;code&gt;goroutine&lt;/code&gt;，但它们并不是被操作系统所调度执行,而是通过系统的线程来多路派遣这些函数的执行，使得每个用go关键字执行的函数可以运行成为一个单位协程。当一个协程阻塞的时候，调度器就会自动把其他协程安排到另外的线程中去执行，从而实现了程序无等待并行化运行。而且调度的开销非常小，一颗CPU调度的规模不下于每秒百万次，这使得在程序中能够创建大量的&lt;code&gt;goroutine&lt;/code&gt;，实现高并发的同时，依旧能保持高性能。&lt;br&gt;&lt;code&gt;goroutine&lt;/code&gt;是通过通信来共享内存,go中是通过&lt;code&gt;Channel&lt;/code&gt;来实现通信的，&lt;code&gt;Channel&lt;/code&gt;本身就像一根管道，go就通过这根管道进行数据的传递,实现消息通信。先来看一个简单的示例：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Go concurrency&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c &amp;lt;- &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;  v := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; c &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面的代码首先创建一个&lt;code&gt;bool&lt;/code&gt;的&lt;code&gt;Channel&lt;/code&gt;对象&lt;code&gt;c&lt;/code&gt;,然后通过&lt;code&gt;go&lt;/code&gt;关键字执行一个&lt;code&gt;goroutine&lt;/code&gt;,紧接着执行一个&lt;code&gt;for&lt;/code&gt;循环;&lt;code&gt;for&lt;/code&gt;会循环去读取&lt;code&gt;c&lt;/code&gt;中的值，如果读取到值，则执行&lt;code&gt;for&lt;/code&gt;循环体（打印v的值），没读取到则&lt;code&gt;for&lt;/code&gt;被阻塞等待,直到读取到&lt;code&gt;c&lt;/code&gt;中的值再去执行&lt;code&gt;for&lt;/code&gt;循环体然后继续循环读取&lt;code&gt;c&lt;/code&gt;，如果执行了&lt;code&gt;close(c)&lt;/code&gt;把&lt;code&gt;Channel&lt;/code&gt;对象&lt;code&gt;c&lt;/code&gt;关闭了，那&lt;code&gt;for&lt;/code&gt;循环就退出不执行了。 这就是通过&lt;code&gt;Channel&lt;/code&gt;通信执行&lt;code&gt;goroutine&lt;/code&gt;的一个简单示例。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上面通过make这样初始化的&lt;code&gt;Channel&lt;/code&gt;对象&lt;code&gt;c&lt;/code&gt;是既可以写又可以被读取的双向通道, 有时候为了避免被误读误写操作，可以初始化一个单向的&lt;code&gt;Channel&lt;/code&gt;对象。通过设置&lt;code&gt;Channel&lt;/code&gt;的长度可以分为有缓冲和无缓冲两种&lt;code&gt;Channel&lt;/code&gt;,无缓冲区的&lt;code&gt;Channel&lt;/code&gt;,在等待读或等待写的过程中都会引起&lt;code&gt;同步阻塞&lt;/code&gt;，而有缓冲区的&lt;code&gt;Channel&lt;/code&gt;,可以看作&lt;code&gt;异步执行&lt;/code&gt;,也可以认为控制为&lt;code&gt;同步执行&lt;/code&gt;，只有当缓冲区被占用完了之后才会引起&lt;code&gt;阻塞&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;//初始化缓冲区长度为3的Channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; send &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt;&amp;lt;- &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; = c &lt;span class=&quot;comment&quot;&gt;//只写入的Channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; recv &amp;lt;-&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; = c &lt;span class=&quot;comment&quot;&gt;//只读取的Channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  &lt;strong&gt; 注意: &lt;/strong&gt;  只读或只写的单向&lt;code&gt;Channel&lt;/code&gt; 都需要借助其它&lt;code&gt;Channel&lt;/code&gt;才有实际意义，定义一个只写入但是读取不出来的&lt;code&gt;Channel&lt;/code&gt;没有任何用处。单向&lt;code&gt;Channel&lt;/code&gt;用作函数形参用于防止参数在函数内部被误读误写是非常有帮助的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u5F00_u542F_u591A_u6838_u5E76_u884C_u5E76_u53D1_u6267_u884C&quot;&gt;&lt;a href=&quot;#u5F00_u542F_u591A_u6838_u5E76_u884C_u5E76_u53D1_u6267_u884C&quot; class=&quot;headerlink&quot; title=&quot;开启多核并行并发执行&quot;&gt;&lt;/a&gt;开启多核并行并发执行&lt;/h2&gt;&lt;p&gt;默认情况下，go所有的&lt;code&gt;goroutines&lt;/code&gt;是在一个线程中执行的，而不是同时利用多核进行并行执行，或者通过切换时间片让出CPU进行并发执行。下面看一段示例：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	runtime.GOMAXPROCS(runtime.NumCPU())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg := sync.WaitGroup&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Add(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; GoPrint(&amp;amp;wg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; GoPrint(wg *sync.WaitGroup) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%d &quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;目前只有显示设置了&lt;code&gt;runtime.GOMAXPROCS&lt;/code&gt;,go才会开启多核并行执行&lt;code&gt;goroutines&lt;/code&gt;, 如果在&lt;code&gt;GoPrint&lt;/code&gt;方法中不加入&lt;code&gt;time.Sleep&lt;/code&gt;，输出的结果将会是&lt;code&gt;0 1 2 0 1 2 0 1 2&lt;/code&gt;，如果当前&lt;code&gt;goroutine&lt;/code&gt;不发生阻塞，它是不会让出CPU给其他&lt;code&gt;goroutine&lt;/code&gt;的, 所以在&lt;code&gt;GoPrint&lt;/code&gt;中不加&lt;code&gt;time.Sleep&lt;/code&gt;,输出会是一个一个&lt;code&gt;goroutine&lt;/code&gt;进行的，而sleep函数则阻塞掉了 当前&lt;code&gt;goroutine&lt;/code&gt;, 当前&lt;code&gt;goroutine&lt;/code&gt;主动让其他&lt;code&gt;goroutine&lt;/code&gt;执行, 所以形成了逻辑上的并行, 也就是并发。&lt;/p&gt;
&lt;h2 id=&quot;go_u5E76_u53D1_u6267_u884C_u5B89_u5168_u95EE_u9898&quot;&gt;&lt;a href=&quot;#go_u5E76_u53D1_u6267_u884C_u5B89_u5168_u95EE_u9898&quot; class=&quot;headerlink&quot; title=&quot;go并发执行安全问题&quot;&gt;&lt;/a&gt;go并发执行安全问题&lt;/h2&gt;&lt;p&gt;go并发执行当多个&lt;code&gt;goroutine&lt;/code&gt;同时访问一个共有的资源时，在不加锁的情况很容易出行数据不同步的问题，看一示例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; sell_tickets(wg *sync.WaitGroup, i &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; total_tickets &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mutex.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 如果有票就卖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; total_tickets &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			time.Sleep(time.Duration(rand.Intn(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)) * time.Millisecond)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 卖一张票&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			total_tickets--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;id:&quot;&lt;/span&gt;, i, &lt;span class=&quot;string&quot;&gt;&quot; ticket:&quot;&lt;/span&gt;, total_tickets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mutex.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面是一个多&lt;code&gt;goroutine&lt;/code&gt;并发买票的问题，比如当开启5个&lt;code&gt;goroutine&lt;/code&gt;来卖100张票，如果不加锁，则有可能会出行多出一些不存在的票的问题。所以当并发访问公有资源时要注意加锁保护公有资源属性修改的唯一性和访问时数据同步问题。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/go-learning/blob/master/concurrency/concurrency_sync_mutex.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6279_u91CF_u5904_u7406_u591A_u4E2AChannel_u64CD_u4F5C&quot;&gt;&lt;a href=&quot;#u6279_u91CF_u5904_u7406_u591A_u4E2AChannel_u64CD_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;批量处理多个Channel操作&quot;&gt;&lt;/a&gt;批量处理多个Channel操作&lt;/h2&gt;&lt;p&gt;go通过&lt;code&gt;Select&lt;/code&gt;可以同时处理多个&lt;code&gt;Channel&lt;/code&gt;,&lt;code&gt;Select&lt;/code&gt;默认是阻塞的，只有当监听的&lt;code&gt;Channel&lt;/code&gt;中有发送或接收可以进行时才会运行,当同时有多个可用的&lt;code&gt;Channel&lt;/code&gt;,&lt;code&gt;Select&lt;/code&gt;按随机顺序进行处理,&lt;code&gt;Select&lt;/code&gt;可以方便处理多&lt;code&gt;Channel&lt;/code&gt;同时响应，在goroutine阻塞的情况也可以方便借助&lt;code&gt;Select&lt;/code&gt;超时机制来解除阻塞僵局，下面来看一个示例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; getHttpRes(url &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) (&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;, error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; *http.Response, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	httpError := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; *error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		resp, err := http.Get(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			httpError &amp;lt;- &amp;amp;err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		res &amp;lt;- resp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; r := &amp;lt;-res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			result, err := ioutil.ReadAll(r.Body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; r.Body.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(result), err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; err := &amp;lt;-httpError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;err&quot;&lt;/span&gt;, *err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-time.After(&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt; * time.Millisecond):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Timed out&quot;&lt;/span&gt;, errors.New(&lt;span class=&quot;string&quot;&gt;&quot;Timed out&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发起http请求之后通常会有三种状况:1.访问成功，返回内容值;2.访问失败，返回错误信息;3.访问超时，返回超时。上面的代码中利用&lt;code&gt;Select&lt;/code&gt;很方便的处理了go并发执行中多可用&lt;code&gt;Channel&lt;/code&gt;的处理问题，通过设置超时，帮助程序跳出超时等待的僵局。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/go-learning/blob/master/concurrency/select_timeout.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;go能处理高并发的根本原因在于执行go协程只需极少的栈内存(大概4~5KB),并且能根据需要动态增长和缩减占用的资源。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="concurrency" scheme="http://www.grdtechs.com/tags/concurrency/"/>
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>golang reflect使用总结</title>
    <link href="http://www.grdtechs.com/2016/02/17/go-reflect-summarize/"/>
    <id>http://www.grdtechs.com/2016/02/17/go-reflect-summarize/</id>
    <published>2016-02-17T00:57:59.000Z</published>
    <updated>2016-02-17T05:44:22.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;反射是一种检查存储在接口变量中的&lt;code&gt;&amp;lt;值,类型&amp;gt;&lt;/code&gt;对的机制，借助go反射包提供的&lt;code&gt;reflect.TypeOf&lt;/code&gt;和&lt;code&gt;reflect.ValueOf&lt;/code&gt;可以方便的访问到一个接口值的&lt;code&gt;reflect.Type&lt;/code&gt;和&lt;code&gt;reflect.Value&lt;/code&gt;部分，从而可进一步得到这个接口的结构类型和对其进行值的修改操作。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u53CD_u5C04_u7684_u4F7F_u7528&quot;&gt;&lt;a href=&quot;#u53CD_u5C04_u7684_u4F7F_u7528&quot; class=&quot;headerlink&quot; title=&quot;反射的使用&quot;&gt;&lt;/a&gt;反射的使用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;获取接口对象的字段,类型和方法信息&lt;/strong&gt;&lt;br&gt;先定义个通用的结构体&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;type User struct{
    Id int
    Name string
    Age int
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将接口对象类型信息映射为反射类型信息&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;golang&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; Info(o &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;{}) {
    t := reflect.TypeOf(o)         &lt;span class=&quot;comment&quot;&gt;//获取接口的类型&lt;/span&gt;
    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Type:&quot;&lt;/span&gt;, t.Name()) &lt;span class=&quot;comment&quot;&gt;//t.Name() 获取接口的名称&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; t.Kind() != refelct.Struct { &lt;span class=&quot;comment&quot;&gt;//通过Kind()来判断反射出的类型是否为需要的类型&lt;/span&gt;
        fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;err: type invalid!&quot;&lt;/span&gt;)        
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;
    }        

    v := reflect.ValueOf(o) &lt;span class=&quot;comment&quot;&gt;//获取接口的值类型&lt;/span&gt;
    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Fields:&quot;&lt;/span&gt;)

    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; t.NumField(); i++ { &lt;span class=&quot;comment&quot;&gt;//NumField取出这个接口所有的字段数量&lt;/span&gt;
    f := t.Field(i)                                   &lt;span class=&quot;comment&quot;&gt;//取得结构体的第i个字段&lt;/span&gt;
    val := v.Field(i).Interface()                     &lt;span class=&quot;comment&quot;&gt;//取得字段的值&lt;/span&gt;
    fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%6s: %v = %v\n&quot;&lt;/span&gt;, f.Name, f.Type, val) &lt;span class=&quot;comment&quot;&gt;//第i个字段的名称,类型,值&lt;/span&gt;
    }

    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; t.NumMethod(); i++{
        m := t.Method(i)
        fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%6s: %v\n&quot;&lt;/span&gt;, m.Name,m.Type) &lt;span class=&quot;comment&quot;&gt;//获取方法的名称和类型       &lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;获取接口对象的类型名称，通过&lt;code&gt;refelct.TypeOf()&lt;/code&gt;获取接口对象的类型,并通过&lt;code&gt;Name()&lt;/code&gt;方法获取接口的名称。&lt;br&gt;获取对象中所有字段的名称,类型和值,通过&lt;code&gt;reflect.ValueOf()&lt;/code&gt;获取接口对象的值类型取得字段的名称和类型,然后通过&lt;code&gt;v.Field(i).Interface()&lt;/code&gt;取得第i个字段的值。&lt;br&gt;还可以通过&lt;code&gt;NumMethod()&lt;/code&gt;循环获取接口对象所有方法的名称和类型。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/go-learning/blob/master/reflect/01reflect.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;反射接口对象中的匿名或嵌入字段信息&lt;/strong&gt;&lt;br&gt;先再添加一个Manager结构,User作为它的匿名字段&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;type Manager struct{
    User
    title string
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;初始化Manager的两种方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;m0 := Manager{User: User{1,&amp;quot;Mike&amp;quot;,11},title: &amp;quot;Man&amp;quot;}
m1 := Manager{User{1,&amp;quot;Mike&amp;quot;,11},&amp;quot;Man&amp;quot;} //这种初始化,赋值顺序必须和结构体中的声明顺序相同! 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在如何来取出Manager中的匿名字段User？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;t := refelct.TypeOf(m)
fmt.Printf(&amp;quot;%#v\n&amp;quot;, t.Field(0))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如上述代码，通过&lt;code&gt;t := refelct.TypeOf(m)&lt;/code&gt;将Manager的字段类型取出来,在反射中对象字段是通过索引取到的，所以可通过&lt;code&gt;t.Field(0)&lt;/code&gt;,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#reflect.StructField{Name:&amp;quot;User&amp;quot;, PkgPath:&amp;quot;&amp;quot;, Type:(*reflect.rtype)(0xedd20), Tag:&amp;quot;&amp;quot;, Offset:0x0, Index:[]int{0}, Anonymous:true}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还可以通过&lt;code&gt;FieldByIndex&lt;/code&gt;和&lt;code&gt;FieldByName&lt;/code&gt;两种方法取得匿名结构体中的字段属性&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给&lt;code&gt;FieldByIndex()&lt;/code&gt;传入一个int型的slice索引,如&lt;code&gt;FieldByIndex([]int{0,0})&lt;/code&gt;即取得User结构体中的Id字段。&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;FieldByName(&amp;quot;Id&amp;quot;)&lt;/code&gt;也可以取得User结构体中Id字段。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u901A_u8FC7_u53CD_u5C04_u4FEE_u6539_u5BF9_u8C61&quot;&gt;&lt;a href=&quot;#u901A_u8FC7_u53CD_u5C04_u4FEE_u6539_u5BF9_u8C61&quot; class=&quot;headerlink&quot; title=&quot;通过反射修改对象&quot;&gt;&lt;/a&gt;通过反射修改对象&lt;/h2&gt;&lt;p&gt;上面通过&lt;code&gt;reflect.TypeOf&lt;/code&gt;和&lt;code&gt;reflect.ValueOf&lt;/code&gt;已经可以得到接口对象的类型,字段和方法等属性了，怎么通过反射来修改对象的字段值？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x := 100
v := refelct.ValueOf(&amp;amp;x) //传入地址
v.Elem().SetInt(200) //成功修改x值为200
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要修改变量x的值，首先就要通过&lt;code&gt;reflect.ValueOf&lt;/code&gt;来获取x的值类型,&lt;code&gt;refelct.ValueOf&lt;/code&gt;返回的值类型是变量x一份值拷贝,要修改变量x就要传递x的地址,从而返回x的地址对象,才可以进行对x变量值对修改操作。在得到x变量的地址值类型之后先调用&lt;code&gt;Elem()&lt;/code&gt;返回地址指针指向的值的Value封装。然后通过&lt;code&gt;Set&lt;/code&gt;方法进行修改赋值。&lt;br&gt;通过反射可以很容易的修改变量的值，怎么来修改结构体中的字段值？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func SetInfo(o interface{}) {
        v := reflect.ValueOf(o)

        if v.Kind() == reflect.Ptr &amp;amp;&amp;amp; !v.Elem().CanSet() { //判断是否为指针类型 元素是否可以修改
            fmt.Println(&amp;quot;cannot set&amp;quot;)
                return
        } else {
            v = v.Elem() //实际取得的对象
        }

        //判断字段是否存在
        f := v.FieldByName(&amp;quot;Name&amp;quot;)
        if !f.IsValid() {
            fmt.Println(&amp;quot;wuxiao&amp;quot;)
                return
        }

        //设置字段
        if f := v.FieldByName(&amp;quot;Name&amp;quot;); f.Kind() == reflect.String {
            f.SetString(&amp;quot;BY&amp;quot;)
        }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要成功修改结构体中的某个字段,主要进行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要反射出这个字段的地址值类型;&lt;/li&gt;
&lt;li&gt;判断反射返回类型是否为&lt;code&gt;reflect.Ptr&lt;/code&gt;指针类型（通过指针才能操作对象地址中的值)同时还要判断这个元素是否可以修改;&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;FieldByName&lt;/code&gt;的返回值判断字段是否存在&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;Kind()&lt;/code&gt;和&lt;code&gt;Set&lt;/code&gt;来修改字段的值&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/go-learning/blob/master/reflect/02reflect.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u901A_u8FC7_u53CD_u5C04_u201C_u52A8_u6001_u201D_u8C03_u7528_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u901A_u8FC7_u53CD_u5C04_u201C_u52A8_u6001_u201D_u8C03_u7528_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;通过反射“动态”调用方法&quot;&gt;&lt;/a&gt;通过反射“动态”调用方法&lt;/h2&gt;&lt;p&gt;现在已经可以通过反射获取并修改接口对象的字段，类型等信息了，那怎么通过反射“动态”调用接口对象等方法？&lt;br&gt;先为&lt;code&gt;User&lt;/code&gt;结构体引入一个&lt;code&gt;Hello&lt;/code&gt;方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func (u User) Hello(m User) (int, string) {
    fmt.Println(&amp;quot;Hello&amp;quot;, m.Name, &amp;quot;, I&amp;apos;m &amp;quot;, u.Name)
    return m.Age + u.Age, u.Name
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面通过反射来调用&lt;code&gt;Hello&lt;/code&gt;这个方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func GetInfo(u interface{}) {
    m := User{2, &amp;quot;Json&amp;quot;, 12}

    v := reflect.ValueOf(u)

    if v.Kind() != reflect.Struct {
        fmt.Println(&amp;quot;type invalid&amp;quot;)
        return
    }

    mv := v.MethodByName(&amp;quot;Hello&amp;quot;) //获取对应的方法
    if !mv.IsValid() {            //判断方法是否存在
        fmt.Println(&amp;quot;Func Hello not exist&amp;quot;)
        return
    }

    args := []reflect.Value{reflect.ValueOf(m)} //初始化传入等参数，传入等类型只能是[]reflect.Value类型
    res := mv.Call(args)
    fmt.Println(res[0], res[1])

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过&lt;code&gt;MethodByName&lt;/code&gt;先获取对象的&lt;code&gt;Hello&lt;/code&gt;方法,然后准备要传入的参数,这里传入的参数必须是&lt;code&gt;[]refelct.Value&lt;/code&gt;类型,传入的参数值必须强制转换为反射值类型&lt;code&gt;refelct.Value&lt;/code&gt;。&lt;br&gt;最后通过调用&lt;code&gt;Call&lt;/code&gt;方法就可以实现通过反射”动态”调用对象的方法。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/go-learning/blob/master/reflect/03reflect.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5C0F_u7ED3&quot;&gt;&lt;a href=&quot;#u5C0F_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过反射包提供&lt;code&gt;refelct.TypeOf&lt;/code&gt;和&lt;code&gt;refelct.ValueOf&lt;/code&gt;方法获得接口对象的类型，值和方法等。&lt;/li&gt;
&lt;li&gt;通过反射修改字段值等时候需要传入地址类型，并且需要检查反射返回值类型是否为&lt;code&gt;refelct.Ptr&lt;/code&gt;，检查字段是否&lt;code&gt;CanSet&lt;/code&gt;,检查字段是存在,然后通过&lt;code&gt;Kind()&lt;/code&gt;来帮助赋值相应对类型值。&lt;/li&gt;
&lt;li&gt;最后总结了通过&lt;code&gt;MethodByName&lt;/code&gt;等方法如何“动态”调用对象的方法，示例代码也演示了如何传入和接收多个参数值。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;反射是一种检查存储在接口变量中的&lt;code&gt;&amp;lt;值,类型&amp;gt;&lt;/code&gt;对的机制，借助go反射包提供的&lt;code&gt;reflect.TypeOf&lt;/code&gt;和&lt;code&gt;reflect.ValueOf&lt;/code&gt;可以方便的访问到一个接口值的&lt;code&gt;reflect.Type&lt;/code&gt;和&lt;code&gt;reflect.Value&lt;/code&gt;部分，从而可进一步得到这个接口的结构类型和对其进行值的修改操作。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
      <category term="reflect" scheme="http://www.grdtechs.com/tags/reflect/"/>
    
  </entry>
  
  <entry>
    <title>用Hexo+github搭建本站</title>
    <link href="http://www.grdtechs.com/2016/01/15/hexo-blog-1/"/>
    <id>http://www.grdtechs.com/2016/01/15/hexo-blog-1/</id>
    <published>2016-01-15T04:10:10.000Z</published>
    <updated>2016-02-15T15:28:26.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;是一个基于&lt;code&gt;Node.js&lt;/code&gt;免费开源的静态博客框架，方便将生成的静态网页托管在&lt;code&gt;github&lt;/code&gt;和&lt;code&gt;Heroku&lt;/code&gt;上，可快速部署，并支持&lt;code&gt;Markdown&lt;/code&gt;写作，这也是选择&lt;code&gt;Hexo&lt;/code&gt;部署本站的理由。无特殊说明，本站所有操作均在&lt;code&gt;Mac OS&lt;/code&gt;下完成。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFAHexo_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u642D_u5EFAHexo_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;搭建Hexo博客&quot;&gt;&lt;/a&gt;搭建Hexo博客&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;Node.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install node #该命令执行后，自动装好node和npm
$ brew upgrade node #更新node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装完成后 我们测试一下 在任意目录下 创建js文件, 如helloworld.js&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.createServer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res.writeHead(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		res.end(&lt;span class=&quot;string&quot;&gt;&#39;Hello World\n&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;).listen(&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Server running at http://127.0.0.1:1337/&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在终端进入该目录下 输入node helloworld.js&lt;br&gt;  在浏览器中输入 地址 &lt;a href=&quot;http://127.0.0.1:1337/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:1337/&lt;/a&gt; 查看结果 至此 NODEJS 运行环境已经配置好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;hexo&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建本地博客&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo init blog #这里是在/Users/lihong/ 这个目录下执行这个目录
$ cd blog  #pwd 目录为: /Users/lihong/blog
$ npm install
$ hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器输入localhost:4000即可看到搭建的博客,此时只能本地访问，可通过部署到github上，使得在公网同样可以访问。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;部署到&lt;code&gt;github&lt;/code&gt;上&lt;br&gt;注册一个&lt;code&gt;github&lt;/code&gt;账号，在自己&lt;code&gt;github&lt;/code&gt;主页右下角，创建一个新的&lt;code&gt;repository&lt;/code&gt;。例如我的github账号为&lt;code&gt;researchlab&lt;/code&gt;,那么我应该创建的repository名字应该是&lt;code&gt;researchlab.github.io&lt;/code&gt;。&lt;br&gt;编辑&lt;code&gt;_config.yml&lt;/code&gt;(在&lt;code&gt;Users/lihong/blog&lt;/code&gt;目录下)。你在部署时，要把下面的researchlab都换成你的账号名。(没有看到repository:, branch:等字段则加上即可）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deploy:
type: git
repository: https://github.com/researchlab/researchlab.github.io.git
branch: master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;回到/Users/lihong/blog目录下执行如下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo generate #生成静态网页
$ hexo deploy #部署到github上
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  &lt;strong&gt;记住:&lt;/strong&gt; 每次修改本地文件后，需要hexo generate才能保存。每次使用命令时，都要在$pwd/blog目录下。现在可在浏览器访问&lt;code&gt;researchlab.github.io&lt;/code&gt;看到我们到博客了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Hexo常用命令&lt;br&gt;  &lt;code&gt;hexo g&lt;/code&gt; == &lt;code&gt;hexo generate&lt;/code&gt; #生成静态页面&lt;br&gt;  &lt;code&gt;hexo d&lt;/code&gt; == &lt;code&gt;hexo deploy&lt;/code&gt; #部署到远程服务器上（如本站部署到 github)&lt;br&gt;  &lt;code&gt;hexo s&lt;/code&gt; == &lt;code&gt;hexo server&lt;/code&gt; #启动本地服务器&lt;br&gt;  &lt;code&gt;hexo n&lt;/code&gt; == &lt;code&gt;hexo new&lt;/code&gt; #新建一篇文章或一个页面&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u914D_u7F6EHexo_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u914D_u7F6EHexo_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;配置Hexo博客&quot;&gt;&lt;/a&gt;配置Hexo博客&lt;/h2&gt;&lt;p&gt;Hexo站点配置用到两个文件，一个是对整站的配置&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;，另一个是对主题的配置 &lt;code&gt;$pwd/blog/themes/jacman/_config.yml&lt;/code&gt;，我们来分别介绍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对整站的配置&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Hexo Configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Source: https://github.com/hexojs/hexo/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Site&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 朴实的一线码农 #站点名 站点左上角 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subtitle: 十年磨一剑，一步一步脚踏实地的耕种 #站点副标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description: Leehong&#39;s Blog #给搜索引擎看的, 对站点的描述，可以自定义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author: Lee Hong &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;language: zh-CN #页面语言&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timezone:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url: http://www.grdtechs.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink: :year/:month/:day/:title/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink_defaults:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Directory #目录配置 默认即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source_dir: source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public_dir: public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_dir: tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;archive_dir: archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_dir: categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;code_dir: downloads/code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i18n_dir: :lang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip_render:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Writing 文章布局，写作格式定义 默认即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new&lt;span class=&quot;emphasis&quot;&gt;_post_&lt;/span&gt;name: :title.md # File name of new posts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_layout: post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;titlecase: false # Transform title into titlecase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;external_link: true # Open external links in new tab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename_case: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render_drafts: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;post&lt;span class=&quot;emphasis&quot;&gt;_asset_&lt;/span&gt;folder: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;relative_link: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;future: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  line_number: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  auto_detect: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tab_replace:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Category &amp;amp; Tag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_category: uncategorized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Date / Time format 期日格式 默认即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Hexo uses Moment.js to parse and display date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## You can customize the date format as defined in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date_format: YYYY-MM-DD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time_format: HH:mm:ss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Pagination 每页显示的文章数目 默认每页显示10篇&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Set per_page to 0 to disable pagination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;per_page: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pagination_dir: page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Extensions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: jacman &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Deployment 部署站点到github&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/researchlab/researchlab.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对主题的配置 &lt;code&gt;$pwd/blog/themes/jacman/_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;##### Menu 站点右上角导航栏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;menu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  首页: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  归档: /archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  关于: /about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## you can create `tags` and `categories` folders in `../source`.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## And create a `index.md` file in each of them.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## set `front-matter`as&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## layout: tags (or categories)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## title: tags (or categories)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## ---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Widgets 站点右边栏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;widgets: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    #- github-card&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;intro&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;category&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;links&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;douban&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;rss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;weibo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ## provide eight widgets:github-card,category,tag,rss,archive,tagcloud,links,weibo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### RSS &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rss: /atom.xml ## RSS address.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imglogo:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true             ## display image logo true/false.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  src: #img/logo.png        ## &lt;span class=&quot;code&quot;&gt;`.svg`&lt;/span&gt; and &lt;span class=&quot;code&quot;&gt;`.png`&lt;/span&gt; are recommended,please put image into the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/img`&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;favicon: #img/favicon.ico   ## size:32px*32px,&lt;span class=&quot;code&quot;&gt;`.ico`&lt;/span&gt; is recommended,please put image into the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/img`&lt;/span&gt;.     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apple_icon: #img/jacman.jpg ## size:114px*114px,please put image into the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/img`&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author_img: #img/author.jpg ## size:220px*220px.display author avatar picture.if don&#39;t want to display,please don&#39;t set this.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;banner_img: #img/banner.jpg ## size:1920px*200px+. Banner Picture&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;### Theme Color &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme_color:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    theme: &#39;#2ca6cb&#39;    ##the defaut theme color is blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# 代码高亮主题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# available: default | night&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight_theme: default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### index post is expanding or not &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expand: true           ## default is unexpanding,so you can only see the short description of each post.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  excerpt_link: Read More  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close_aside: false  #close sidebar in post page if true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mathjax: false      #enable mathjax if true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;### Creative Commons License Support, see http://creativecommons.org/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;### you can choose: by , by-nc , by-nc-nd , by-nc-sa , by-nd , by-sa , zero&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;creative_commons: none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Toc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;toc:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  article: true   ## show contents in article.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  aside: true     ## show contents in aside.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## you can set both of the value to true of neither of them.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## if you don&#39;t want display contents in a specified post,you can modify `front-matter` and add `toc: false`.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Links&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;links:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Linux/c/c++: http://blog.csdn.net/xiaolongwang2010,小龙王2010csdn技术博客&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Comment 添加多说评论&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;duoshuo_shortname: gamedp   ## e.g. Leehong   your duoshuo short name.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;disqus_shortname:     ## e.g. Leehong   your disqus short name.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Share button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jiathis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true ## if you use jiathis as your share tool,the built-in share tool won&#39;t be display.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:  2084050  ## e.g. 2084050 your jiathis ID. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tsina: ## e.g. 2176287895 Your weibo id,It will be used in share button.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Analytics&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google_analytics:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:        ## e.g. UA-46321946-2 your google analytics ID.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  site:      ## e.g. Leehong.me your google analytics site or set the value as auto.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## You MUST upgrade to Universal Analytics first!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## https://developers.google.com/analytics/devguides/collection/upgrade/?hl=zh_CN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu_tongji:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sitecode: ## e.g. e6d1f421bbc9962127a50488f9ed37d1 your baidu tongji site code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cnzz_tongji:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  siteid:    ## e.g. 1253575964 your cnzz tongji site id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Miscellaneous&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ShowCustomFont: true  ## you can change custom font in &lt;span class=&quot;code&quot;&gt;`variable.styl`&lt;/span&gt; and &lt;span class=&quot;code&quot;&gt;`font.styl`&lt;/span&gt; which in the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/css`&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fancybox: true        ## if you use gallery post or want use fancybox please set the value to true.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;totop: true           ## if you want to scroll to top in every post set the value to true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Custom Search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google_cse: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cx:   ## e.g. 018294693190868310296:abnhpuysycw your Custom Search ID.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## https://www.google.com/cse/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## To enable the custom search You must create a &quot;search&quot; folder in &#39;/source&#39; and a &quot;index.md&quot; file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## set the &#39;front-matter&#39; as&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## layout: search &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## title: search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## ---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu_search:     ## http://zn.baidu.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:   ## e.g. &quot;783281470518440642&quot;  for your baidu search id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  site: http://zhannei.baidu.com/cse/search  ## your can change to your site instead of the default site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tinysou_search:     ## http://tinysou.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:  ## e.g. &quot;4ac092ad8d749fdc6293&quot; for your tiny search id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u7528Hexo_u5199_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u7528Hexo_u5199_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;用Hexo写博客&quot;&gt;&lt;/a&gt;用Hexo写博客&lt;/h2&gt;&lt;p&gt;站点配置好了之后，可通过执行如下命令开始写文章并发布&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo new &amp;quot;the_first_post&amp;quot; #在/Users/lihong/blog 目录下执行hexo new 命令
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打开新建的&lt;code&gt;source/_posts/the_first_post.md&lt;/code&gt;, 如下：&lt;br&gt;&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;horizontal_rule&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: the&lt;span class=&quot;emphasis&quot;&gt;_first_&lt;/span&gt;post # 这个是文章的标题,可随意修改,如: 用Hexo+github搭建本站 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-01-15 12:10:10 #发表日期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories: Hexo #文章分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags: [Hexo,Blog] #文章标签,多于一项时用这种格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;description: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# 这里是正文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/span&gt;&lt;/span&gt; #这后面的正文在首页不予以显示&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;写好之后，执行&lt;code&gt;hexo g&lt;/code&gt; 命令生成静态网页，执行&lt;code&gt;hexo s&lt;/code&gt;启动本地服务器此时可通过localhost:4000在本地浏览器访问,执行&lt;code&gt;hexo d&lt;/code&gt;部署到github上，则可通过公网访问了。&lt;/p&gt;
&lt;h2 id=&quot;u4F18_u5316Hexo_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u4F18_u5316Hexo_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;优化Hexo博客&quot;&gt;&lt;/a&gt;优化Hexo博客&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;导航栏添加”关于”&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hexo new page &amp;quot;about&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;到&lt;code&gt;source/about/index.md&lt;/code&gt;编辑内容&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;themes/jacman/_config.yml&lt;/code&gt;中,添加如下：&lt;pre&gt;&lt;code&gt;menu:
    关于: /about
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加RSS&lt;br&gt;hexo提供了RSS的生成插件，需要手动安装和设置。步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装RSS插件到本地：&lt;code&gt;npm install hexo-generator-feed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开启RSS功能：编辑&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;，添加如下代码：&lt;pre&gt;&lt;code&gt;plugins:
    - hexo-generator-feed
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;themes/jacman/_config.yml&lt;/code&gt;中，编辑 &lt;code&gt;rss: /atom.xml&lt;/code&gt;&lt;br&gt;&lt;strong&gt; 注意 &lt;/strong&gt; 如果发现没有生成&lt;code&gt;atom.xml&lt;/code&gt;, 可接着执行&lt;code&gt;npm install hexo-generator-feed --save&lt;/code&gt;即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加sitemap&lt;br&gt;hexo也提供了sitemap到生成插件，与添加RSS插件类似。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装sitemap插件到本地：&lt;code&gt;npm install hexo-generator-sitemap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开启sitmap功能: 编辑&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;,添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;plugins:
    - hexo-generator-feed
    - hexo-generator-sitemap
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问researchlab.github.io/sitemap.xml即可看到站点地图。不过，sitemap的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到google和百度等搜索引擎提交sitemap.xml。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文章中插入图片&lt;br&gt;使用markdown写文章，插入图片的格式为&lt;code&gt;![图片名称](链接地址)&lt;/code&gt;，这里要说的是链接地址怎么写。对于hexo，有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用本地路径：在&lt;code&gt;$pwd/blog/source&lt;/code&gt;目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为&lt;code&gt;/img/图片名称&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用微博图床，地址:&lt;a href=&quot;http://weibotuchuang.sinaapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://weibotuchuang.sinaapp.com/&lt;/a&gt;，将图片拖入区域中，会生成图片的URL，这就是链接地址。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u95EE_u9898_u89E3_u51B3_u65B9_u6848&quot;&gt;&lt;a href=&quot;#u95EE_u9898_u89E3_u51B3_u65B9_u6848&quot; class=&quot;headerlink&quot; title=&quot;问题解决方案&quot;&gt;&lt;/a&gt;问题解决方案&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;执行&lt;code&gt;Hexo d&lt;/code&gt; 出现&lt;code&gt;ERROR Deployer not found:git&lt;/code&gt;,解决方案：&lt;code&gt;npm install hexo-deployer-git --save&lt;/code&gt; 即可。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;是一个基于&lt;code&gt;Node.js&lt;/code&gt;免费开源的静态博客框架，方便将生成的静态网页托管在&lt;code&gt;github&lt;/code&gt;和&lt;code&gt;Heroku&lt;/code&gt;上，可快速部署，并支持&lt;code&gt;Markdown&lt;/code&gt;写作，这也是选择&lt;code&gt;Hexo&lt;/code&gt;部署本站的理由。无特殊说明，本站所有操作均在&lt;code&gt;Mac OS&lt;/code&gt;下完成。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.grdtechs.com/categories/Hexo/"/>
    
    
      <category term="Blog" scheme="http://www.grdtechs.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://www.grdtechs.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
