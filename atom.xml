<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>朴实的一线攻城狮</title>
  <subtitle>十年磨一剑，一步一步脚踏实地的耕种</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.grdtechs.com/"/>
  <updated>2016-07-14T07:26:17.567Z</updated>
  <id>http://www.grdtechs.com/</id>
  
  <author>
    <name>Lee Hong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang 格式化时间总结</title>
    <link href="http://www.grdtechs.com/2016/06/14/go-time-summary/"/>
    <id>http://www.grdtechs.com/2016/06/14/go-time-summary/</id>
    <published>2016-06-14T14:05:28.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;golang&lt;/code&gt; 中经常需要格式化时间和日期来满足不同的业务需求,下面总结格式化时间日期中遇到的问题。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;golang_time_u5305__u65F6_u95F4_u65E5_u671F_u683C_u5F0F_u5316_u5B9A_u4E49&quot;&gt;&lt;a href=&quot;#golang_time_u5305__u65F6_u95F4_u65E5_u671F_u683C_u5F0F_u5316_u5B9A_u4E49&quot; class=&quot;headerlink&quot; title=&quot;golang time包 时间日期格式化定义&quot;&gt;&lt;/a&gt;golang time包 时间日期格式化定义&lt;/h2&gt;&lt;p&gt;go 的time package 提供了time.Format函数，用来对时间进行格式化输出;类似的还有time.Parse用来解析字符串类型的时间到time.Time。这是两个互逆的函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 下面看&lt;code&gt;golang&lt;/code&gt;中&lt;code&gt;time&lt;/code&gt;包对于时间的详细定义 &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;月份 1,01,Jan,January&lt;/li&gt;
&lt;li&gt;日　 2,02,_2&lt;/li&gt;
&lt;li&gt;时　 3,03,15,PM,pm,AM,am&lt;/li&gt;
&lt;li&gt;分　 4,04&lt;/li&gt;
&lt;li&gt;秒　 5,05&lt;/li&gt;
&lt;li&gt;年　 06,2006&lt;/li&gt;
&lt;li&gt;时区 -07,-0700,Z0700,Z07:00,-07:00,MST&lt;/li&gt;
&lt;li&gt;周几 Mon,Monday&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; 比如小时的表示(原定义是下午3时，也就是15时) &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 用12小时制表示，去掉前导0&lt;/li&gt;
&lt;li&gt;03 用12小时制表示，保留前导0&lt;/li&gt;
&lt;li&gt;15 用24小时制表示，保留前导0&lt;/li&gt;
&lt;li&gt;03pm 用24小时制am/pm表示上下午表示，保留前导0&lt;/li&gt;
&lt;li&gt;3pm 用24小时制am/pm表示上下午表示，去掉前导0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; 又比如月份 &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 数字表示月份，去掉前导0&lt;/li&gt;
&lt;li&gt;01 数字表示月份，保留前导0&lt;/li&gt;
&lt;li&gt;Jan 缩写单词表示月份&lt;/li&gt;
&lt;li&gt;January 全单词表示月份&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u65F6_u95F4_u65E5_u671F_u683C_u5F0F_u5316&quot;&gt;&lt;a href=&quot;#u65F6_u95F4_u65E5_u671F_u683C_u5F0F_u5316&quot; class=&quot;headerlink&quot; title=&quot;时间日期格式化&quot;&gt;&lt;/a&gt;时间日期格式化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本地当期时间&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Now()) &lt;span class=&quot;comment&quot;&gt;//2016-07-14 14:27:28.214512532 +0800 CST&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;时间格式化&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Now().Format(&lt;span class=&quot;string&quot;&gt;&quot;3:04:05.000 PM Mon Jan&quot;&lt;/span&gt;))            &lt;span class=&quot;comment&quot;&gt;// 2:27:05.702 PM Thu Jul&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Now().Format(&lt;span class=&quot;string&quot;&gt;&quot;2006-01-_2 3:04:05.000 PM Mon Jan&quot;&lt;/span&gt;)) &lt;span class=&quot;comment&quot;&gt;// 2016-07-14 2:54:11.442 PM Thu Jul&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Now().Format(&lt;span class=&quot;string&quot;&gt;&quot;2006-01-02 15:04:05&quot;&lt;/span&gt;))  &lt;span class=&quot;comment&quot;&gt;// 2016-07-14 14:54:11.442239513 +0800 CST&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;本地当前时间戳(10位)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Now().Unix()) &lt;span class=&quot;comment&quot;&gt;//1468479251&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;本地当前时间戳(19位)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Now().UnixNano()) &lt;span class=&quot;comment&quot;&gt;//1468480006774460462&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;时间戳转时间 &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Unix(&lt;span class=&quot;number&quot;&gt;1389058332&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).Format(&lt;span class=&quot;string&quot;&gt;&quot;2006-01-02 15:04:05&quot;&lt;/span&gt;)) &lt;span class=&quot;comment&quot;&gt;//2014-01-07 09:32:12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;时间转时间戳&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(time.Date(&lt;span class=&quot;number&quot;&gt;2014&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, time.Local).Unix())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;时间转换为UTC时间和本地时间( UTC:零时区 +0000， China: 东八区 +0800)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dateStr := &lt;span class=&quot;string&quot;&gt;&quot;2016-07-14 14:24:51&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timestamp1, _ := time.Parse(&lt;span class=&quot;string&quot;&gt;&quot;2006-01-02 15:04:05&quot;&lt;/span&gt;, dateStr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timestamp2, _ := time.ParseInLocation(&lt;span class=&quot;string&quot;&gt;&quot;2006-01-02 15:04:05&quot;&lt;/span&gt;, dateStr, time.Local)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(timestamp1, timestamp2)               &lt;span class=&quot;comment&quot;&gt;//2016-07-14 14:24:51 +0000 UTC 2016-07-14 14:24:51 +0800 CST &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Println(timestamp1.Unix(), timestamp2.Unix()) &lt;span class=&quot;comment&quot;&gt;//1468506291 1468477491 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;now := time.Now()                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;year, mon, day := now.UTC().Date()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hour, min, sec := now.UTC().Clock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zone, _ := now.UTC().Zone()     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;UTC 时间是 %d-%d-%d %02d:%02d:%02d %s\n&quot;&lt;/span&gt;,         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    year, mon, day, hour, min, sec, zone) &lt;span class=&quot;comment&quot;&gt;// UTC 时间是 2016-7-14 07:06:46 UTC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;year, mon, day = now.Date()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hour, min, sec = now.Clock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zone, _ = now.Zone()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;本地时间是 %d-%d-%d %02d:%02d:%02d %s\n&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    year, mon, day, hour, min, sec, zone) &lt;span class=&quot;comment&quot;&gt;// 本地时间是 2016-7-14 15:06:46 CST&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;golang&lt;/code&gt; 中经常需要格式化时间和日期来满足不同的业务需求,下面总结格式化时间日期中遇到的问题。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
      <category term="time" scheme="http://www.grdtechs.com/tags/time/"/>
    
  </entry>
  
  <entry>
    <title>Go Vendoring Tools 使用总结</title>
    <link href="http://www.grdtechs.com/2016/05/24/comparison-of-Go-Vendoring-Tools/"/>
    <id>http://www.grdtechs.com/2016/05/24/comparison-of-Go-Vendoring-Tools/</id>
    <published>2016-05-24T14:03:36.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;golang1.5版本开始支持第三方包到依赖管理,当多个项目在同一个&lt;code&gt;GOPATH&lt;/code&gt;下，每个项目包含到第三方包通过&lt;code&gt;go get&lt;/code&gt;命令都会&lt;code&gt;get&lt;/code&gt;到&lt;code&gt;GOPATH&lt;/code&gt;下到&lt;code&gt;src&lt;/code&gt;目录中，而不是各个项目的文件夹中，这就导致第三方包的不同版本不能同时被&lt;code&gt;GOPATH&lt;/code&gt;下到多个项目使用，从&lt;code&gt;golang&lt;/code&gt;需要设置&lt;code&gt;GOPATH&lt;/code&gt;来看,&lt;code&gt;golang&lt;/code&gt;其实把每个项目当作一个个独立的第三包来看待。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;关于&lt;code&gt;golang&lt;/code&gt;包管理工具的topic, 在&lt;code&gt;golang&lt;/code&gt;的官方wiki要有一篇总结对比的文章:&lt;a href=&quot;https://github.com/golang/go/wiki/PackageManagementTools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PackageManagementTools&lt;/a&gt;。下面主要就项目中用过的&lt;code&gt;godep&lt;/code&gt;,&lt;code&gt;govendor&lt;/code&gt;,&lt;code&gt;glide&lt;/code&gt;做一个简要的对比分析。&lt;/p&gt;
&lt;h2 id=&quot;godep&quot;&gt;&lt;a href=&quot;#godep&quot; class=&quot;headerlink&quot; title=&quot;godep&quot;&gt;&lt;/a&gt;godep&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/tools/godep&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;godep&lt;/a&gt; helps build packages reproducibly by fixing their dependencies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前置条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目处在&lt;code&gt;GOPATH&lt;/code&gt;下&lt;/li&gt;
&lt;li&gt;项目能被&lt;code&gt;go install&lt;/code&gt;通过&lt;/li&gt;
&lt;li&gt;项目能被&lt;code&gt;go test&lt;/code&gt;通过&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;包初始化管理&lt;/strong&gt;&lt;br&gt;在项目根目录下执行&lt;code&gt;godep save&lt;/code&gt;命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ godep save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会在项目根目录下生成两个文件夹: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Godeps&lt;/code&gt;目录&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  Godeps tree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── Godeps.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── Readme&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; directories, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;➜  Godeps cat Godeps.json &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;ImportPath&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;yaml&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;GoVersion&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;go1.6&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;GodepVersion&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;v70&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;Packages&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;./...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;Deps&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;ImportPath&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;gopkg.in/yaml.v2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;Rev&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;a83829b6f1293c91addabc89d0571c246397bbf4&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;vendor&lt;/code&gt;目录:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  vendor tree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── gopkg.in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── yaml.v2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── apic.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── decode.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── emitterc.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── encode.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── LICENSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── LICENSE.libyaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── parserc.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── readerc.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── resolve.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── scannerc.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── sorter.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── writerc.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── yaml.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ├── yamlh.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        └── yamlprivateh.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; directories, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; files&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，&lt;code&gt;godep&lt;/code&gt;把第三包的版本依赖信息记录在&lt;code&gt;Godeps.json&lt;/code&gt;下，并且把第三包完整拷贝一份到&lt;code&gt;vendor&lt;/code&gt;下面。通过对&lt;code&gt;Godeps.json&lt;/code&gt;文件进行版本管理即可以管理整个项目的第三方包依赖信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加新包&lt;/strong&gt;&lt;br&gt;方法一：&lt;/p&gt;
&lt;p&gt;go get 把新增的第三方包get到&lt;code&gt;GOPATH&lt;/code&gt;的&lt;code&gt;src&lt;/code&gt;目录下，然后再执行&lt;code&gt;godep save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;方法二：&lt;/p&gt;
&lt;p&gt;godep get &lt;url&gt; 同样是把第三方包get到&lt;code&gt;GOPATH&lt;/code&gt;的&lt;code&gt;src&lt;/code&gt;下，然后再执行&lt;code&gt;godep save&lt;/code&gt;&lt;/url&gt;&lt;/p&gt;
&lt;p&gt;可以看到&lt;code&gt;godep&lt;/code&gt;只是把第三方包进行单独到依赖管理，而新增到第三包还是会被get到&lt;code&gt;GOPATH&lt;/code&gt;中, 如果多个项目用同一个第三包的不同版本时，显然不能满足。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新包&lt;/strong&gt;&lt;br&gt;&lt;code&gt;godep&lt;/code&gt;通过&lt;code&gt;godep update&lt;/code&gt; 更新制定的第三包以及&lt;code&gt;golang&lt;/code&gt;的版本。&lt;/p&gt;
&lt;h2 id=&quot;govendor&quot;&gt;&lt;a href=&quot;#govendor&quot; class=&quot;headerlink&quot; title=&quot;govendor&quot;&gt;&lt;/a&gt;govendor&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/kardianos/govendor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;govendor&lt;/a&gt; Uses the go1.5+ vendor folder. Multiple workflows supported, single tool.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Setup your project.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;my project in GOPATH&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Add existing GOPATH files to vendor.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor add +external&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# View your work.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Look at what is using a package&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor list -v fmt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Specify a specific version or revision to fetch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor fetch golang.org/x/net/context@a4bbce9fcae005b22ae5443f6af064d80a6f5a55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor fetch golang.org/x/net/context@v1   &lt;span class=&quot;comment&quot;&gt;# Get latest v1.*.* tag or branch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor fetch golang.org/x/net/context@=v1  &lt;span class=&quot;comment&quot;&gt;# Get the tag or branch named &quot;v1&quot;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Update a package to latest, given any prior version constraint&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;govendor fetch golang.org/x/net/context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Sub-commands&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;init     Create the &lt;span class=&quot;string&quot;&gt;&quot;vendor&quot;&lt;/span&gt; folder and the &lt;span class=&quot;string&quot;&gt;&quot;vendor.json&quot;&lt;/span&gt; file.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    list     List and filter existing dependencies and packages.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add      Add packages from &lt;span class=&quot;variable&quot;&gt;$GOPATH&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    update   Update packages from &lt;span class=&quot;variable&quot;&gt;$GOPATH&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remove   Remove packages from the vendor folder.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status   Lists any packages missing, out-of-date, or modified locally.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch    Add new or update vendor folder packages from remote repository.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sync     Pull packages into vendor folder from remote repository with revisions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 from vendor.json file.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    migrate  Move packages from a legacy tool to the vendor folder with metadata.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    get      Like &lt;span class=&quot;string&quot;&gt;&quot;go get&quot;&lt;/span&gt; but copies dependencies into a &lt;span class=&quot;string&quot;&gt;&quot;vendor&quot;&lt;/span&gt; folder.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    license  List discovered licenses &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the given status or import paths.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shell    Run a &lt;span class=&quot;string&quot;&gt;&quot;shell&quot;&lt;/span&gt; to make multiple sub-commands more efficent &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; large&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 projects.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    go tool commands that are wrapped:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      `+&amp;lt;status&amp;gt;` package selection may be used with them&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt, build, install, clean, &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;, vet, generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Status&lt;/strong&gt; &lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;    (l) packages &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; your project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +external (e) referenced packages &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; GOPATH but not &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; current project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +vendor   (v) packages &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the vendor folder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +std      (s) packages &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the standard library&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +unused   (u) packages &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the vendor folder, but unused&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +missing  (m) referenced packages but not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +program  (p) package is a main package&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +outside  +external +missing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +all      +all packages&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到&lt;code&gt;govendor init&lt;/code&gt;之后会在根目录下生成一个&lt;code&gt;vendor&lt;/code&gt;文件夹 &lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  yaml tree &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── vendor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── cihub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │       └── seelog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── gopkg.in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        └── yaml.v2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; directories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;➜  yaml cat vendor/vendor.json &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;comment&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;ignore&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;package&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;checksumSHA1&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Nc93Ubautl47L3RP6x4lTY+ud68=&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;path&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;github.com/cihub/seelog&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;revision&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;cedd97ac8c6c2ec413a97864185f9510fb1775cc&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;revisionTime&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-20T13:10:56Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;checksumSHA1&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;+OgOXBoiQ+X+C2dsAeiOHwBIEH0=&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;path&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;gopkg.in/yaml.v2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;revision&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;a83829b6f1293c91addabc89d0571c246397bbf4&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;revisionTime&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-03-01T20:40:22Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;rootPath&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;yaml&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用&lt;code&gt;govendor fetch &amp;lt;url1&amp;gt; &amp;lt;url2&amp;gt;&lt;/code&gt;新增的第三方包直接被get到根目录的&lt;code&gt;vendor&lt;/code&gt;文件夹下,不会与其它的项目混用第三方包，完美避免多个项目同用同一个第三方包的不同版本问题。&lt;/p&gt;
&lt;p&gt;只需要对&lt;code&gt;vendor/vendor.json&lt;/code&gt;进行版本控制，即可对第三包依赖关系进行控制。&lt;/p&gt;
&lt;h2 id=&quot;glide&quot;&gt;&lt;a href=&quot;#glide&quot; class=&quot;headerlink&quot; title=&quot;glide&quot;&gt;&lt;/a&gt;glide&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Masterminds/glide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Glide&lt;/a&gt; Vendor Package Management for Golang.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜  yaml glide --help&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;USAGE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   glide [global options] &lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt; options] [arguments...]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	create, init	Initialize a new project, creating a glide.yaml file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    get			Install one or more packages into `vendor/` and add dependency to glide.yaml.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remove, rm		Remove a package from the glide.yaml file, and regenerate the lock file.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    import		Import files from other dependency management systems.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name		Print the name of this project.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    novendor, nv	List all non-vendor paths &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; a directory.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rebuild		Rebuild (&lt;span class=&quot;string&quot;&gt;&#39;go build&#39;&lt;/span&gt;) the dependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    install, i		Install a project&lt;span class=&quot;string&quot;&gt;&#39;s dependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    update, up		Update a project&#39;&lt;/span&gt;s dependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tree		Tree prints the dependencies of this project as a tree.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    list		List prints all dependencies that the present code references.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info		Info prints information about this project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    about		Learn about Glide&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GLOBAL OPTIONS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --yaml, -y &lt;span class=&quot;string&quot;&gt;&quot;glide.yaml&quot;&lt;/span&gt;	Set a YAML configuration file.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --quiet, -q			Quiet (no info or debug messages)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --debug			Print Debug messages (verbose)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --home &lt;span class=&quot;string&quot;&gt;&quot;/home/dev/.glide&quot;&lt;/span&gt;	The location of Glide files [&lt;span class=&quot;variable&quot;&gt;$GLIDE_HOME&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --no-color			Turn off colored output &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; messages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --help, -h			show &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   --version, -v		&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; the version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;glide&lt;/code&gt;    通过&lt;code&gt;glide create&lt;/code&gt;或&lt;code&gt;glide init&lt;/code&gt;命令初始化第三方包管理，会在项目根目录下生成一个&lt;code&gt;glide.yaml&lt;/code&gt;，这个文件记录用到的第三方包的依赖关系，支持编辑修改。&lt;br&gt;&lt;code&gt;glide&lt;/code&gt;通过&lt;code&gt;glide install&lt;/code&gt;, 会把所有缺少的第三方包都下载到&lt;code&gt;vendor&lt;/code&gt;文件夹下，并且会在&lt;code&gt;glide.yaml&lt;/code&gt;中添加所有依赖的第三方包名称，在&lt;code&gt;glide.lock&lt;/code&gt;文件中记录具体的版本管理信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;glide install&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you want to install the specific versions from the glide.lock file use glide install.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ glide install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;This will read the &lt;code&gt;glide.lock&lt;/code&gt; file and install the commit id specific versions there.&lt;/p&gt;
&lt;p&gt;When the glide.lock file doesn’t tie to the &lt;code&gt;glide.yaml&lt;/code&gt; file, such as there being a change, it will provide a warning. Running glide up will recreate the &lt;code&gt;glide.lock&lt;/code&gt; file when updating the dependency tree.&lt;/p&gt;
&lt;p&gt;If no glide.lock file is present glide install will perform an update and generate a lock file.&lt;/p&gt;
&lt;h2 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;godep&lt;/code&gt;,&lt;code&gt;govendor&lt;/code&gt;,&lt;code&gt;glide&lt;/code&gt; 都可以很好的进行包管理。&lt;code&gt;govendor&lt;/code&gt;,&lt;code&gt;glide&lt;/code&gt;提供的可操作命令更丰富。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;godep&lt;/code&gt; 会在根目录生成&lt;code&gt;Godeps&lt;/code&gt;和&lt;code&gt;vendor&lt;/code&gt;两个文件夹; &lt;code&gt;govendor&lt;/code&gt;把所有信息都生成在&lt;code&gt;vendor&lt;/code&gt;目录下; &lt;code&gt;glide&lt;/code&gt; 会在根目录下生成&lt;code&gt;glide.yaml&lt;/code&gt;, &lt;code&gt;glide.lock&lt;/code&gt;文件及&lt;code&gt;vendor&lt;/code&gt;目录; 从&lt;code&gt;简洁度&lt;/code&gt;和&lt;code&gt;尽量不污染项目&lt;/code&gt;来看，&lt;code&gt;govendor&lt;/code&gt;最优，&lt;code&gt;glide&lt;/code&gt;次之。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;godep&lt;/code&gt;, &lt;code&gt;govendor&lt;/code&gt;, &lt;code&gt;glide&lt;/code&gt; 都提供get 第三方包的命令，但是 &lt;code&gt;glide&lt;/code&gt;的&lt;code&gt;glide install&lt;/code&gt; 最为方便， 并且直接把第三方包get到本项目的vendor目录下，并且&lt;code&gt;glide&lt;/code&gt;提供的&lt;code&gt;便捷&lt;/code&gt;命令也丰富。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt; 在生产项目中推荐使用&lt;code&gt;govendor&lt;/code&gt;, 更简洁; 在试验项目中推荐试用&lt;code&gt;glide&lt;/code&gt;, 更方便。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;golang1.5版本开始支持第三方包到依赖管理,当多个项目在同一个&lt;code&gt;GOPATH&lt;/code&gt;下，每个项目包含到第三方包通过&lt;code&gt;go get&lt;/code&gt;命令都会&lt;code&gt;get&lt;/code&gt;到&lt;code&gt;GOPATH&lt;/code&gt;下到&lt;code&gt;src&lt;/code&gt;目录中，而不是各个项目的文件夹中，这就导致第三方包的不同版本不能同时被&lt;code&gt;GOPATH&lt;/code&gt;下到多个项目使用，从&lt;code&gt;golang&lt;/code&gt;需要设置&lt;code&gt;GOPATH&lt;/code&gt;来看,&lt;code&gt;golang&lt;/code&gt;其实把每个项目当作一个个独立的第三包来看待。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="glide" scheme="http://www.grdtechs.com/tags/glide/"/>
    
      <category term="godep" scheme="http://www.grdtechs.com/tags/godep/"/>
    
      <category term="govendor" scheme="http://www.grdtechs.com/tags/govendor/"/>
    
      <category term="vendoring" scheme="http://www.grdtechs.com/tags/vendoring/"/>
    
  </entry>
  
  <entry>
    <title>使用Travis CI自动构建Hexo静态博客</title>
    <link href="http://www.grdtechs.com/2016/05/08/travis-ci-deploy-hexo-blog/"/>
    <id>http://www.grdtechs.com/2016/05/08/travis-ci-deploy-hexo-blog/</id>
    <published>2016-05-08T21:48:40.000Z</published>
    <updated>2016-07-14T07:26:17.571Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;目前，自动化构建、持续集成的理念在整个计算行业非常的流行，大家更愿意去使用自动化代替手动，从而提高效率。&lt;code&gt;Travis CI&lt;/code&gt;就是一个在线的、分布式的持续集成服务，用来构建及测试在GitHub托管的代码。利用Travis CI 会在每一次push后生成一个虚拟机来执行事先安排好的自动构建任务，从来进行发布。本文就要用&lt;code&gt;Travis CI&lt;/code&gt;来自动构建&lt;code&gt;Hexo&lt;/code&gt;博客。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5B89_u88C5Hexo&quot;&gt;&lt;a href=&quot;#u5B89_u88C5Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装Hexo&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装cnpm&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：npm因为qiang的原因，经常会出问题，我换成了taobao的cmpn镜像，taobao的cnpm镜像这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装Hexo&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cnpm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动本地的服务器看下是否安装成功&lt;code&gt;hexo s&lt;/code&gt;，浏览器打开&lt;a href=&quot;http://localhost:4000。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;到目前为止，Hexo安装完毕，如何配置及发布到&lt;code&gt;github&lt;/code&gt;上托管，请参考&lt;a href=&quot;/./hexo-blog-1.md&quot;&gt;用Hexo+github搭建本站&lt;/a&gt;。本文重点记录如何用&lt;code&gt;Travis CI&lt;/code&gt; 自动构建&lt;code&gt;Hexo&lt;/code&gt;博客。&lt;/p&gt;
&lt;h2 id=&quot;u90E8_u7F72Travis_CI&quot;&gt;&lt;a href=&quot;#u90E8_u7F72Travis_CI&quot; class=&quot;headerlink&quot; title=&quot;部署Travis CI&quot;&gt;&lt;/a&gt;部署Travis CI&lt;/h2&gt;&lt;p&gt;目前，自动化构建、持续集成的理念在整个计算行业非常的流行，大家更愿意去使用自动化代替手动，从而提高效率。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;持续集成的概念&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;持续集成是一种软件开发实践。在持续集成中，团队成员频繁集成他们的工作成果，每人每天可能集成一次，甚至多次。每次集成会经过自动构建（包括自动测试）的检验，以尽快发现集成错误。许多团队发现这种方法可以显著减少集成引起的问题，并可以加快团队合作软件开发的速度。&lt;/p&gt;
&lt;p&gt;自动构建工具则是持续集成的一种出色实践。代码提交后，由软件自动完成代码的测试、构建，并将过程中状态与构建物产出才是持续集成的意义。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Travis CI本身已经是很好的自动构建的工具，而这里使用的原因，本质上是因为Hexo本身并不能进行多人合作。Hexo的hexo generate和hexo deploy会自动渲染并提交到GitHub上，所以当你从别的电脑上clone的时候，clone下来的是渲染好的html的文章。就算我在两个电脑上同时搭建了环境，但是每次渲染的时候只会渲染本地的markdown文章，依然不能进行同步。有些人选择了使用百度云进行同步，每次写之前下载下来并覆盖，就能进行同步。不否认，这个方法对于一个人写博客，在工作和家的电脑还算是比较方便的，因为始终是一个人进行操作。而我们的博客是多人共同写的，所以说会存在各种冲突问题，于是想到了用Travis CI。&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/imgs/travis-hexo-flowing.png&quot; alt=&quot;travis-hexo-flowing&quot;&gt;&lt;/center&gt;

&lt;p&gt;从上述流程中分析下思路：&lt;br&gt;前提：我们在之前博客搭建的repo下面，新建一个blog的分支，这个分支用来进行环境代码的备份，并且配置出&lt;code&gt;.travis.yml&lt;/code&gt;进行自动化构建。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;User - push -&amp;gt; branch blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将代码push到在GitHub上的博客中的blog分支。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Dev repo - sync -&amp;gt; Travis CI&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在branch blog中配置&lt;code&gt;.travis.yml&lt;/code&gt;文件，在Travis CI中开启branch blog的同步开关，并启用&lt;code&gt;Build only if .travis.yml is present&lt;/code&gt;项，这样能在repo中有多个branch时，让Travis CI只构建放置了&lt;code&gt;.travis.yml&lt;/code&gt;文件的&lt;code&gt;branch&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Travis CI - build and push -&amp;gt; Pages repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Travis CI&lt;/code&gt; 的自动化构建完全依靠唯一的&lt;code&gt;.travis.yml&lt;/code&gt;脚本文件。需要在此文件中添加构建环境、构建Hexo、生成博客及后续push到Pages repo的全部脚本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成SSH Key&lt;br&gt;要做到&lt;code&gt;Travis CI&lt;/code&gt;向&lt;code&gt;Pages repo&lt;/code&gt;自动推送就必须用到&lt;code&gt;Github SSH Key&lt;/code&gt;，这样做的目的是免去Hexo部署时候输入密码的步骤。生成SSH Key的操作参照GitHub的官网即可：&lt;a href=&quot;https://help.github.com/articles/generating-an-ssh-key/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github SSH Key&lt;/a&gt;。&lt;br&gt;这样会得到&lt;code&gt;id_rsa.pub&lt;/code&gt;和&lt;code&gt;id_rsa&lt;/code&gt;两个秘钥，我们将&lt;code&gt;id_rsa.pub&lt;/code&gt;添加到了&lt;code&gt;github&lt;/code&gt;，下面要加密&lt;code&gt;id_rsa&lt;/code&gt;这个私钥并且上传到&lt;code&gt;Travis&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; 注意：&lt;/strong&gt; &lt;font color=&quot;red&quot;&gt;这个SSH key不应该是你账号的全局SSH Key，这样Travis CI就获得了你所有代码库的提交权限。仅仅只需要把SSH Key添加到当前repo的setting中的key下面即可。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;即将&lt;code&gt;id_rsa.pub&lt;/code&gt;秘钥添加到当前项目&lt;code&gt;researchlab.github.io&lt;/code&gt;下&lt;code&gt;Settings&lt;/code&gt;下的&lt;code&gt;Deploy keys&lt;/code&gt;中，如图:&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;/imgs/deploy_keys.png&quot; alt=&quot;deploy_keys&quot;&gt;&lt;/center&gt;

&lt;blockquote&gt;
&lt;p&gt;记得要将 &lt;code&gt;Allow write access&lt;/code&gt; 的选项选上，这样 Travis CI 才能获得 push 代码的权限。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Travis CI 环境&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo cp ~/.ssh/id_rsa / &lt;span class=&quot;comment&quot;&gt;#将上一步得到的`id_rsa`复制到当前blog根目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ vim .travis.yml &lt;span class=&quot;comment&quot;&gt;#创建.travis.yml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ gem install travis &lt;span class=&quot;comment&quot;&gt;#安装Travis CI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ travis login --auto &lt;span class=&quot;comment&quot;&gt;#登录Travis CI，需要输入GitHub的账号密码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ travis encrypt-file ssh_key --add &lt;span class=&quot;comment&quot;&gt;#加密私钥并上传至Travis 注意这里的 ssh_key 要换成上面私钥的名称，即: travis encrypt-file id_rsa&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;:&lt;br&gt;gem 的官方源经常被qiang, 所以要注意更换gem sources,&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem sources &lt;span class=&quot;comment&quot;&gt;#查看原有的官方源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; -r https://rubygems.org/ &lt;span class=&quot;comment&quot;&gt;# 删除 rubygems 官方源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; http://mirrors.aliyun.com/rubygems/   &lt;span class=&quot;comment&quot;&gt;# 添加aliyun 源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem install travis --no-rdoc --no-ri --verbose  &lt;span class=&quot;comment&quot;&gt;# 安装Travis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生成提示&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;encrypting id_rsa &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; researchlab/researchlab.github.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;storing result as id_rsa.enc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;storing secure env variables &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; decryption&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Make sure to add id_rsa.enc to the git repository.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Make sure not to add id_rsa to the git repository.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Commit all changes to your .travis.yml.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成加密过得新秘钥&lt;code&gt;id_rsa.enc&lt;/code&gt;, 并自动将branch blog中git的信息及解密秘钥的相关信息添加到&lt;code&gt;.travis.yml&lt;/code&gt;中。&lt;strong&gt; 然后手动删除私钥文件&lt;code&gt;id_rsa&lt;/code&gt;， 以保证代码仓库的安全。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH的设置&lt;br&gt;在当前目录下新建文件ssh_config，内容为&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Host github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  User git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StrictHostKeyChecking no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  IdentityFile ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  IdentitiesOnly yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改.travis.yml中的命令，指定openssl解密后的生成位置，xxxxxxxxxx部分就是你的解密参数，不要去改动它。&lt;br&gt;即将&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- openssl aes-&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;-cbc -K &lt;span class=&quot;variable&quot;&gt;$encrypted_xxxxxxxxxx_key&lt;/span&gt; -iv &lt;span class=&quot;variable&quot;&gt;$encrypted_xxxxxxxxxx_iv&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	-in id_rsa.enc -out id_rsa &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改为：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- openssl aes-&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;-cbc -K &lt;span class=&quot;variable&quot;&gt;$encrypted_xxxxxxxxxx_key&lt;/span&gt; -iv &lt;span class=&quot;variable&quot;&gt;$encrypted_xxxxxxxxxx_iv&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -in id_rsa.enc -out ~/.ssh/id_rsa &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;修改目录权限&lt;br&gt;紧接着在.travis.yml中修改目录权限&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- chmod &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt; ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;将密钥加入系统&lt;br&gt;紧接着在.travis.yml中将密钥加入系统&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- &lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt; $(ssh-agent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- ssh-add ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;修改git信息&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- cp ssh_config ~/.ssh/config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- git config --global user.email username@example.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;添加分支信息&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;branches:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  only:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;配置Hexo&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;install:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- npm install hexo --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- hexo g &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就完成了&lt;code&gt;.travis.yml&lt;/code&gt;的设置，这里是我的源文件&lt;code&gt;.travis.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;language: node_js&amp;#10;node_js:&amp;#10;- &amp;#39;0.12&amp;#39;&amp;#10;branches:&amp;#10;  only:&amp;#10;  - blog&amp;#10;before_install:&amp;#10;- openssl aes-256-cbc -K $encrypted_xxxxxxxxxx_key-iv $encrypted_xxxxxxxxxx_iv&amp;#10;  -in id_rsa.enc -out ~/.ssh/id_rsa -d&amp;#10;- chmod 600 ~/.ssh/id_rsa&amp;#10;- eval $(ssh-agent)&amp;#10;- ssh-add ~/.ssh/id_rsa&amp;#10;- cp ssh_config ~/.ssh/config&amp;#10;- git config --global user.name &amp;#34;researchlab&amp;#34;&amp;#10;- git config --global user.email leehongitrd@163.com &amp;#10;- git clone -b master git@github.com:researchlab/researchlab.github.io.git deploy_git&amp;#10;install:&amp;#10;- npm install hexo-cli -g&amp;#10;- npm install&amp;#10;- npm install hexo-generator-feed --save&amp;#10;- npm install hexo-deployer-git --save&amp;#10;script:&amp;#10;- hexo clean&amp;#10;- hexo g&amp;#10;- hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候应该将其push到blog分支,然后就可以了。&lt;/p&gt;
&lt;h2 id=&quot;u9047_u5230Authentication_failed&quot;&gt;&lt;a href=&quot;#u9047_u5230Authentication_failed&quot; class=&quot;headerlink&quot; title=&quot;遇到Authentication failed&quot;&gt;&lt;/a&gt;遇到Authentication failed&lt;/h2&gt;&lt;p&gt;提交之后，发现&lt;code&gt;Travis-ci&lt;/code&gt; 每次到&lt;code&gt;hexo d&lt;/code&gt; 这一步时就报错了：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;remote: Invalid username or password.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: Authentication failed &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://github.com/researchlab/researchlab.github.io.git/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FATAL Something&lt;span class=&quot;string&quot;&gt;&#39;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error: remote: Invalid username or password.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: Authentication failed for &#39;&lt;/span&gt;https://github.com/researchlab/researchlab.github.io.git/&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at ChildProcess.&amp;lt;anonymous&amp;gt; (/home/travis/build/researchlab/researchlab.github.io/node_modules/hexo-deployer-git/node_modules/hexo-util/lib/spawn.js:37:17)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at ChildProcess.emit (events.js:110:17)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at maybeClose (child_process.js:1019:16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Process.ChildProcess._handle.onexit (child_process.js:1091:5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FATAL remote: Invalid username or password.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: Authentication failed for &#39;&lt;/span&gt;https://github.com/researchlab/researchlab.github.io.git/&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error: remote: Invalid username or password.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: Authentication failed for &#39;&lt;/span&gt;https://github.com/researchlab/researchlab.github.io.git/&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at ChildProcess.&amp;lt;anonymous&amp;gt; (/home/travis/build/researchlab/researchlab.github.io/node_modules/hexo-deployer-git/node_modules/hexo-util/lib/spawn.js:37:17)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at ChildProcess.emit (events.js:110:17)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at maybeClose (child_process.js:1019:16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Process.ChildProcess._handle.onexit (child_process.js:1091:5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The command &quot;hexo d&quot; exited with 2.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;store build cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.00s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.99schanges detected, packing new archive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FAILED: tar -Pzcf /home/travis/.casher/push.tgz &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar: Cowardly refusing to create an empty archive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Try `tar --help&#39;&lt;/span&gt; or `tar --usage&lt;span class=&quot;string&quot;&gt;&#39; for more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uploading archive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;failed to upload cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl: Can&#39;&lt;/span&gt;t open &lt;span class=&quot;string&quot;&gt;&#39;/home/travis/.casher/push.tgz&#39;&lt;/span&gt;!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl: try &lt;span class=&quot;string&quot;&gt;&#39;curl --help&#39;&lt;/span&gt; or &lt;span class=&quot;string&quot;&gt;&#39;curl --manual&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; more information&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Done. Your build exited with &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是因为hexo 根目录下的 &lt;code&gt;_config.yml&lt;/code&gt;中配置问题导致的：&lt;br&gt;把如下配置:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Deployment&amp;#10;## Docs: https://hexo.io/docs/deployment.html&amp;#10;deploy:&amp;#10;  type: git&amp;#10;  repository: https://github.com/researchlab/researchlab.github.io.git&amp;#10;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改为：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Deployment&amp;#10;## Docs: https://hexo.io/docs/deployment.html&amp;#10;deploy:&amp;#10;  type: git&amp;#10;  repository: git@github.com:researchlab/researchlab.github.io.git&amp;#10;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题即解决！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;目前，自动化构建、持续集成的理念在整个计算行业非常的流行，大家更愿意去使用自动化代替手动，从而提高效率。&lt;code&gt;Travis CI&lt;/code&gt;就是一个在线的、分布式的持续集成服务，用来构建及测试在GitHub托管的代码。利用Travis CI 会在每一次push后生成一个虚拟机来执行事先安排好的自动构建任务，从来进行发布。本文就要用&lt;code&gt;Travis CI&lt;/code&gt;来自动构建&lt;code&gt;Hexo&lt;/code&gt;博客。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.grdtechs.com/categories/Hexo/"/>
    
    
      <category term="Blog" scheme="http://www.grdtechs.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://www.grdtechs.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>gin中使用设置cookie过期时间总结</title>
    <link href="http://www.grdtechs.com/2016/03/29/gin-setcookie/"/>
    <id>http://www.grdtechs.com/2016/03/29/gin-setcookie/</id>
    <published>2016-03-29T01:48:56.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;可以操作&lt;code&gt;Cookie&lt;/code&gt;的&lt;code&gt;Http&lt;/code&gt;头有两个:&lt;code&gt;Set-Cookie&lt;/code&gt;和&lt;code&gt;Cookie&lt;/code&gt;。&lt;code&gt;Set-Cookie&lt;/code&gt;由服务器发送，它包含在响应请求的头部中。它用于在客户端创建一个&lt;code&gt;Cookie&lt;/code&gt;。&lt;code&gt;Cookie&lt;/code&gt;头由客户端发送，包含在&lt;code&gt;HTTP&lt;/code&gt;请求的头部中。&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;注意：1.只有cookie的domain和path与请求的URL匹配才会发送这个cookie;2.客户端发送cookie信息给服务器只发送键-值对到服务器，cookie的属性是不会发送给服务器的。&lt;/strong&gt;&lt;/font&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u8BD5_u9A8C_u9700_u6C42&quot;&gt;&lt;a href=&quot;#u8BD5_u9A8C_u9700_u6C42&quot; class=&quot;headerlink&quot; title=&quot;试验需求&quot;&gt;&lt;/a&gt;试验需求&lt;/h2&gt;&lt;p&gt;1.服务器给客户端设置cookie，并设置过期时间，客户端每次请求服务器时如果cookie没有过期，则服务器将cookie相应的value 加1并重设cookie, 如果cookie 过期，则重新设置cookie让value 从0开始计数。&lt;/p&gt;
&lt;h2 id=&quot;u8BD5_u9A8C_u4EE3_u7801&quot;&gt;&lt;a href=&quot;#u8BD5_u9A8C_u4EE3_u7801&quot; class=&quot;headerlink&quot; title=&quot;试验代码&quot;&gt;&lt;/a&gt;试验代码&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;github.com/gin-gonic/gin&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;strconv&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	r := gin.Default()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	r.Use(Counter()) &lt;span class=&quot;comment&quot;&gt;//这个是每个请求都会执行Counter()这个方法，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	r.GET(&lt;span class=&quot;string&quot;&gt;&quot;/counter&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(c *gin.Context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; cookie, err := c.Request.Cookie(&lt;span class=&quot;string&quot;&gt;&quot;counter&quot;&lt;/span&gt;); err == &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			c.String(http.StatusOK, cookie.Expires.String())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			http.SetCookie(c.Writer, &amp;amp;http.Cookie&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Name:    &lt;span class=&quot;string&quot;&gt;&quot;counter&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Value:   &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Expires: time.Now().Add(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * time.Second),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			c.String(http.StatusOK, &lt;span class=&quot;string&quot;&gt;&quot;SetCookie ok&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;server start from 8010&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	r.Run(&lt;span class=&quot;string&quot;&gt;&quot;:8010&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; Counter() gin.HandlerFunc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(c *gin.Context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; cookie, err := c.Request.Cookie(&lt;span class=&quot;string&quot;&gt;&quot;counter&quot;&lt;/span&gt;); err == &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			value := cookie.Value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(value) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				cookie.Value = &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; v, err := strconv.Atoi(value); err == &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					i := v + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					cookie.Value = fmt.Sprintf(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			http.SetCookie(c.Writer, cookie)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//before request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			c.Next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//after request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			c.String(http.StatusOK, &lt;span class=&quot;string&quot;&gt;&quot; counter:&quot;&lt;/span&gt;+cookie.Value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u4EE3_u7801_u5206_u6790&quot;&gt;&lt;a href=&quot;#u4EE3_u7801_u5206_u6790&quot; class=&quot;headerlink&quot; title=&quot;代码分析&quot;&gt;&lt;/a&gt;代码分析&lt;/h2&gt;&lt;p&gt;上述代码中&lt;code&gt;r.Use(Counter())&lt;/code&gt;表示客户端每次发送一个请求给服务器，都会执行&lt;code&gt;Counter()&lt;/code&gt;这个函数。比如客户端发送一个&lt;code&gt;http://localhost:8010/counter&lt;/code&gt;的请求给服务器，则具体的处理流程为：先执行&lt;code&gt;Counter()&lt;/code&gt;函数中的&lt;code&gt;c.Next()&lt;/code&gt;前面的代码，当执行到&lt;code&gt;c.Next()&lt;/code&gt;时， 先去执行&lt;code&gt;r.GET(&amp;quot;/counter&amp;quot;,func(c *gin.Context) {xxx}&lt;/code&gt;中&lt;code&gt;xxx&lt;/code&gt;程序体，当&lt;code&gt;xxx&lt;/code&gt;程序体执行完之后，再执行&lt;code&gt;Counter()&lt;/code&gt;函数中&lt;code&gt;c.Next()&lt;/code&gt;之后的程序体，然后整个请求执行完毕。&lt;/p&gt;
&lt;p&gt;回到上面的试验需求，第一次请求时没有cookie，此时服务器设置cookie并设置过期时间，第二次请求时如果还没有过期则在Counter中就能查到cookie,此时通过&lt;code&gt;Counter()&lt;/code&gt;重新设置cookie, 但是注意：这里设置的cookie，因为Name与之前的cookie是一样的，所以此次设置的cookie的属性会覆盖之前的cookie的属性，因为此次只是改变cookie的value，而没有设置cookie的属性，所以此次设置cookie没有过期时间可言了。所以上述的试验需求是不合理的。或者说可以通过&lt;code&gt;redis&lt;/code&gt;的操作去实现，但是不能仅靠设置&lt;code&gt;cookie&lt;/code&gt;来实现这个需求。&lt;/p&gt;
&lt;h2 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;服务器发送cookie给客户端&lt;/strong&gt;&lt;br&gt; 从服务器端，发送cookie给客户端，是对应的Set-Cookie。包括了对应的cookie的名称，值，以及各个属性。&lt;br&gt; 例如：&lt;br&gt;Set-Cookie: lu=Rg3vHJZnehYLjVg7qi3bZjzg; Expires=Tue, 15 Jan 2013 21:47:38 GMT; Path=/; Domain=.169it.com; HttpOnly&lt;br&gt;Set-Cookie: made_write_conn=1295214458; Path=/; Domain=.169it.com&lt;br&gt;Set-Cookie: reg_fb_gate=deleted; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Path=/; Domain=.169it.com; HttpOnly&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从客户端把cookie发送到服务器&lt;/strong&gt;&lt;br&gt; 从客户端发送cookie给服务器的时候，是不发送cookie的各个属性的，而只是发送对应的名称和值。&lt;br&gt; 例如：&lt;br&gt;GET /spec.html HTTP/1.1&lt;br&gt;Host: www.example.org&lt;br&gt;Cookie: name=value; name2=value2&lt;br&gt;Accept: &lt;em&gt;/&lt;/em&gt;  &lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;除了name=value对以外，我们还可以设置Cookie其他属性以支持更丰富的Cookie需求，&lt;strong&gt;这些属性通常是浏览器用来判断如何对待cookie，何时删除、屏蔽或者如何发送name-value对给Server。也就是说无论我们设置了某个cookie的多少属性，这些Cookie属性是不会被浏览器发送回给Server的。包括设置的过期时间也不会发送到服务器端&lt;/strong&gt;&lt;/font&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;可以操作&lt;code&gt;Cookie&lt;/code&gt;的&lt;code&gt;Http&lt;/code&gt;头有两个:&lt;code&gt;Set-Cookie&lt;/code&gt;和&lt;code&gt;Cookie&lt;/code&gt;。&lt;code&gt;Set-Cookie&lt;/code&gt;由服务器发送，它包含在响应请求的头部中。它用于在客户端创建一个&lt;code&gt;Cookie&lt;/code&gt;。&lt;code&gt;Cookie&lt;/code&gt;头由客户端发送，包含在&lt;code&gt;HTTP&lt;/code&gt;请求的头部中。&lt;font color=red&gt;&lt;strong&gt;注意：1.只有cookie的domain和path与请求的URL匹配才会发送这个cookie;2.客户端发送cookie信息给服务器只发送键-值对到服务器，cookie的属性是不会发送给服务器的。&lt;/strong&gt;&lt;/font&gt;&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="gin" scheme="http://www.grdtechs.com/tags/gin/"/>
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
      <category term="setcookie" scheme="http://www.grdtechs.com/tags/setcookie/"/>
    
  </entry>
  
  <entry>
    <title>golang类型转换(指定精度/四舍五入)</title>
    <link href="http://www.grdtechs.com/2016/03/24/go-type-convert/"/>
    <id>http://www.grdtechs.com/2016/03/24/go-type-convert/</id>
    <published>2016-03-24T02:06:54.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;的数据类型很多都需要显示转换才能使用,比如&lt;code&gt;string&lt;/code&gt;转&lt;code&gt;float64&lt;/code&gt;指定精度等。转换中常用到的第三方包为&lt;code&gt;strconv&lt;/code&gt;和&lt;code&gt;math&lt;/code&gt;包。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6574_u578B_u8F6C_u5B57_u7B26_u4E32&quot;&gt;&lt;a href=&quot;#u6574_u578B_u8F6C_u5B57_u7B26_u4E32&quot; class=&quot;headerlink&quot; title=&quot;整型转字符串&quot;&gt;&lt;/a&gt;整型转字符串&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;strconv.Itoa(i) &lt;span class=&quot;comment&quot;&gt;//方法1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strconv.FormatInt(&lt;span class=&quot;typename&quot;&gt;int64&lt;/span&gt;(i),&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//方法2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u5B57_u7B26_u4E32_u8F6C_u6574_u578B&quot;&gt;&lt;a href=&quot;#u5B57_u7B26_u4E32_u8F6C_u6574_u578B&quot; class=&quot;headerlink&quot; title=&quot;字符串转整型&quot;&gt;&lt;/a&gt;字符串转整型&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;strconv.Atoi(s) &lt;span class=&quot;comment&quot;&gt;//方法1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strconv.ParseInt(s,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//方法2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;bytes_u8F6Cfloat64&quot;&gt;&lt;a href=&quot;#bytes_u8F6Cfloat64&quot; class=&quot;headerlink&quot; title=&quot;bytes转float64&quot;&gt;&lt;/a&gt;bytes转float64&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; bytesToFloat64(bytes []&lt;span class=&quot;typename&quot;&gt;byte&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bits := binary.LittleEndian.Uint64(bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; math.Float64frombits(bits)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;float64_u8F6Cbytes&quot;&gt;&lt;a href=&quot;#float64_u8F6Cbytes&quot; class=&quot;headerlink&quot; title=&quot;float64转bytes&quot;&gt;&lt;/a&gt;float64转bytes&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; float64ToBytes(input &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;) []&lt;span class=&quot;typename&quot;&gt;byte&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bits := math.Float64bits(input)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bytes := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;([]&lt;span class=&quot;typename&quot;&gt;byte&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//这里表示[]uint8, 所以用了 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	binary.LittleEndian.PutUint64(bytes,bits)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;float64_u8F6Cstring&quot;&gt;&lt;a href=&quot;#float64_u8F6Cstring&quot; class=&quot;headerlink&quot; title=&quot;float64转string&quot;&gt;&lt;/a&gt;float64转string&lt;/h2&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; FloatToStr(num &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;, floatPartLen &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; strconv.FormatFloat(num,&lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt;,floatPartLen,&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//这里64改为32，则表示float32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;string_u8F6Cfloat64&quot;&gt;&lt;a href=&quot;#string_u8F6Cfloat64&quot; class=&quot;headerlink&quot; title=&quot;string转float64&quot;&gt;&lt;/a&gt;string转float64&lt;/h2&gt;&lt;p&gt;&lt;code&gt;string&lt;/code&gt;转&lt;code&gt;float64&lt;/code&gt; 这里有两种方法，都支持指定精度。&lt;strong&gt; 注意：所有数字要在表现层显示最好转换为字符串传送给表现层，如果用于后端计算则转换为数字即可。比如：数字2.10 如果用保持5位数字精度显示： 那么 数字2.10 显示为：2.1, 而将2.10转换为字符串同时保持5位精度，则显示为: 2.10000。但是它们都是转换为了5位精度的，只是显示的时候，数字2.10000 直接显示为2.1了， 所以要显示精度则转换为字符串，要用于计算则转换为数字。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法1： 只支持指定精度&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; strToFloat64(str &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	lenstr := &lt;span class=&quot;string&quot;&gt;&quot;%.&quot;&lt;/span&gt; + strconv.Itoa(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	value,_ := strconv.ParseFloat(str,&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nstr := fmt.Sprintf(lenstr,value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	val,_ := strconv.ParseFloat(nstr,&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方法2：支持指定精度，支持是否四舍五入&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; strToFloat64Round(str &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;, prec &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;, round &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	f,_ := strconv.ParseFloat(str,&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Precision(f,prec,round)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; Precision(f &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;, prec &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;, round &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pow10_n := math.Pow10(prec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; round &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; math.Trunc(f + &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;/pow10_n)*pow10_n) / pow10_n	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; math.Trunc((f)*pow10_n) / pow10_n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;具体请参考[&lt;a href=&quot;https://github.com/researchlab/golearning/blob/master/base/convert.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;]&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;的数据类型很多都需要显示转换才能使用,比如&lt;code&gt;string&lt;/code&gt;转&lt;code&gt;float64&lt;/code&gt;指定精度等。转换中常用到的第三方包为&lt;code&gt;strconv&lt;/code&gt;和&lt;code&gt;math&lt;/code&gt;包。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>golang 设计模式之observer使用总结</title>
    <link href="http://www.grdtechs.com/2016/02/26/observer-pattern-in-go-md/"/>
    <id>http://www.grdtechs.com/2016/02/26/observer-pattern-in-go-md/</id>
    <published>2016-02-26T00:40:11.000Z</published>
    <updated>2016-07-14T07:26:17.571Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;观察者(&lt;code&gt;Observer&lt;/code&gt;)设计模式定义了对象间的一种一对多的依赖关系，以便一个对象的状态发生变化时，所有依赖于它的对象都得到通知并自动刷新。观察者模式将观察者和被观察的对象分离开,体现了面向对象设计中一个对象只做一件事情的原则，提高了应用程序的可维护性和重用性。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5B9E_u73B0_u89C2_u5BDF_u8005_u6A21_u5F0F&quot;&gt;&lt;a href=&quot;#u5B9E_u73B0_u89C2_u5BDF_u8005_u6A21_u5F0F&quot; class=&quot;headerlink&quot; title=&quot;实现观察者模式&quot;&gt;&lt;/a&gt;实现观察者模式&lt;/h2&gt;&lt;p&gt;观察者模式有很多实现方式，从根本上说，该模式必须包含两个角色：观察者(Observer)和被观察对象(Subject)。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;/imgs/observer_pattern.jpg&quot; alt=&quot;observer_pattern&quot;&gt;&lt;/center&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;观察者&lt;br&gt;观察者（&lt;code&gt;Observer&lt;/code&gt;）将自己注册到被观察对象（&lt;code&gt;Subject&lt;/code&gt;）中，被观察对象将观察者存放在一个容器（&lt;code&gt;Container&lt;/code&gt;）里。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;被观察&lt;br&gt;被观察对象(&lt;code&gt;Subject&lt;/code&gt;)发生了某种变化，从容器中得到所有注册过的观察者，将变化通知观察者(&lt;code&gt;notifyObservers&lt;/code&gt;)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;撤销观察&lt;br&gt;观察者告诉被观察者要撤销观察，被观察者从容器中将观察者去除。&lt;br&gt;&lt;strong&gt;观察者将自己注册到被观察者的容器中时，被观察者不应该过问观察者的具体类型，而是应该使用观察者的接口。&lt;/strong&gt;这样的优点是：假定程序中还有别的观察者，那么只要这个观察者也是相同的接口实现即可。一个被观察者可以对应多个观察者，当被观察者发生变化的时候，它可以将消息一一通知给所有的观察者。基于接口，而不是具体的实现——这一点为程序提供了更大的灵活性。&lt;br&gt;下面通过构建一个股民(&lt;code&gt;Observer&lt;/code&gt;)和他们关注的某支具体股票(&lt;code&gt;Subject&lt;/code&gt;)案例分析,&lt;br&gt;首先观察者(&lt;code&gt;Observer&lt;/code&gt;)要能注册/注销到某个被观察者(&lt;code&gt;Subject&lt;/code&gt;)中，同时被观察者(&lt;code&gt;Subject&lt;/code&gt;)发送变化时要能够通知到依赖它的观察者(&lt;code&gt;Observer&lt;/code&gt;),由此我们需要声明一个被观察者(&lt;code&gt;Subject&lt;/code&gt;)的接口：&lt;/p&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// subject被观察者接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Subject &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Attach(Observer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Detach(Observer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Notify()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;遵循被观察者不应该过问观察者的具体类型，而是应该使用观察者的接口的原则，当被观察者(&lt;code&gt;Subject&lt;/code&gt;)因自身改变通知观察者(&lt;code&gt;Observer&lt;/code&gt;)改变时，应提供一个观察者(&lt;code&gt;Observer&lt;/code&gt;)接口供被观察者(&lt;code&gt;Subject&lt;/code&gt;)调用:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// observer观察者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Observer &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Update(Subject, &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;) &lt;span class=&quot;comment&quot;&gt;//更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接口设计好之后，就需要通过具体的对象来实现这些接口，在这个案例中假定股民关注的是中国石油这只股票，那么股票就是观察者(&lt;code&gt;Observer&lt;/code&gt;),而中国石油股票则是被观察者(&lt;code&gt;Subject&lt;/code&gt;),具体结构如下：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 具体observer观察者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Investors &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/*投资人*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 具体subject被观察者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; ChinaPetroleum &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	oblist []Observer &lt;span class=&quot;comment&quot;&gt;//注册者链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;观察者(&lt;code&gt;Observer&lt;/code&gt;)设计模式定义了对象间的一种一对多的依赖关系，以便一个对象的状态发生变化时，所有依赖于它的对象都得到通知并自动刷新。观察者模式将观察者和被观察的对象分离开,体现了面向对象设计中一个对象只做一件事情的原则，提高了应用程序的可维护性和重用性。&lt;br&gt;
    
    </summary>
    
      <category term="go-pattern" scheme="http://www.grdtechs.com/categories/go-pattern/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
      <category term="observer" scheme="http://www.grdtechs.com/tags/observer/"/>
    
  </entry>
  
  <entry>
    <title>golang 设计模式之singleton使用总结</title>
    <link href="http://www.grdtechs.com/2016/02/25/singleton-pattern-in-go/"/>
    <id>http://www.grdtechs.com/2016/02/25/singleton-pattern-in-go/</id>
    <published>2016-02-25T17:01:43.000Z</published>
    <updated>2016-07-14T07:26:17.571Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;golang&lt;/code&gt; 1.5版本之后默认设置&lt;code&gt;GOMAXPROCS&lt;/code&gt;值为当前计算机真实核心数，使得&lt;code&gt;goroutines&lt;/code&gt;从默认的&lt;code&gt;单线程内并发执行&lt;/code&gt;变成了默认的（真实核心数支持的）的&lt;code&gt;多线程内并行&lt;/code&gt;执行。多线程并行执行&lt;code&gt;goroutines&lt;/code&gt;需要考虑并行执行过程中引入的&lt;code&gt;线程安全问题&lt;/code&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5355_u7EBF_u7A0Bsingleton_u6A21_u578B&quot;&gt;&lt;a href=&quot;#u5355_u7EBF_u7A0Bsingleton_u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;单线程singleton模型&quot;&gt;&lt;/a&gt;单线程singleton模型&lt;/h2&gt;&lt;p&gt;单例模式定义：保证一个类仅有一个实例，并提供一个访问它的全局访问点。先摘取一个在实际工作项目中碰到的singleton模型代码:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; singleton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; singleton &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance *singleton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; GetInstance() *singleton &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; instance == &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       instance = &amp;amp;singleton&amp;#123;&amp;#125;   &lt;span class=&quot;comment&quot;&gt;// 没有考虑线程安全 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的&lt;code&gt;singleton&lt;/code&gt;设计代码在见过的几个&lt;code&gt;golang&lt;/code&gt;项目中都是这么写的，如果这段代码放在&lt;code&gt;golang&lt;/code&gt;1.5版本之前默认的单线程场景下运行显然是没什么问题的。&lt;code&gt;golang&lt;/code&gt;1.5版本之后默认是启动多核并行执行&lt;code&gt;goroutines&lt;/code&gt;的，如果上述代码放在&lt;code&gt;golang&lt;/code&gt;1.5版本之后，如果程序开启n个&lt;code&gt;goroutines&lt;/code&gt;初始化一个&lt;code&gt;singleton&lt;/code&gt;对象, 显然会初始化成功最少一个最多n个&lt;code&gt;singleton&lt;/code&gt;对象，从而会存在潜在的多个单例实例对象了，也就不可能保证这个&lt;code&gt;singleton&lt;/code&gt;对象全局唯一性了，那后继采用&lt;code&gt;singleton&lt;/code&gt;对象进行全局唯一性操作时势必会造成数据不一致的问题。如果场景中但个&lt;code&gt;goroutines&lt;/code&gt;执行时间短的话，会使得调试更难。&lt;/p&gt;
&lt;h2 id=&quot;u91C7_u7528_u4E92_u65A5_u9501_u673A_u5236&quot;&gt;&lt;a href=&quot;#u91C7_u7528_u4E92_u65A5_u9501_u673A_u5236&quot; class=&quot;headerlink&quot; title=&quot;采用互斥锁机制&quot;&gt;&lt;/a&gt;采用互斥锁机制&lt;/h2&gt;&lt;p&gt;面对上述线程安全问题，一般会考虑到用锁机制(&lt;code&gt;Mutex&lt;/code&gt;)来解决因线程安全引入的数据不一致问题，采用锁机制如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mu Sync.Mutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; GetInstance() *singleton &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mu.Lock()                    &lt;span class=&quot;comment&quot;&gt;// singleton实例对象操作之后，锁就是多余的了 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; mu.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; instance == &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instance = &amp;amp;singleton&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述代码可以看到，引入锁机制&lt;code&gt;Sync.Mutex&lt;/code&gt;后，能够保证多线程并行执行&lt;code&gt;goroutines&lt;/code&gt;创建的&lt;code&gt;singleton&lt;/code&gt;实例对象是唯一的，但是当这个&lt;code&gt;singleton&lt;/code&gt;实例对象被初始化创建之后，再次并行来创建&lt;code&gt;singleton&lt;/code&gt;实例对象时，其实已经不再需要锁了，因为已经存在了一个创建好的&lt;code&gt;singleton&lt;/code&gt;实例对象，所以直接返回即可;但是因为锁机制的存在，使得再次创建&lt;code&gt;singleton&lt;/code&gt;实例对象时，还是需要先获取锁，然后在判断处理，多线程执行中这种锁竞争使得多线程的并行执行变成了多线程的串行执行，这显然会使程序丧失并行执行带来的性能提升。在一个高度并行的程序中，这样显示会是抑制程序性能提升的一个瓶颈。&lt;/p&gt;
&lt;h2 id=&quot;u91C7_u7528_u53CC_u91CD_u68C0_u67E5_u9501_u673A_u5236&quot;&gt;&lt;a href=&quot;#u91C7_u7528_u53CC_u91CD_u68C0_u67E5_u9501_u673A_u5236&quot; class=&quot;headerlink&quot; title=&quot;采用双重检查锁机制&quot;&gt;&lt;/a&gt;采用双重检查锁机制&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;C++&lt;/code&gt;等编程语言中，为了同时保证最小锁和线程安全通常采用的方法是&lt;code&gt;双重检查锁(Check-Lock-Check)&lt;/code&gt;机制，也表述为&lt;code&gt;DCL(Double Check Lock)&lt;/code&gt;。&lt;code&gt;双重检查锁&lt;/code&gt;机制的伪代码一般是下面的这种形式:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; check() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lock() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; check() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;// 锁安全代码 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其实对这个&lt;code&gt;singleton&lt;/code&gt;实例对象来说，只有在第一次创建实例的时候才需要同步，所以为了减少同步，先check一下，判断&lt;code&gt;singleton&lt;/code&gt;实例对象是否为空，如果为空，表示是第一使用这个&lt;code&gt;singleton&lt;/code&gt;实例对象，那就锁住它，new一个&lt;code&gt;singleton&lt;/code&gt;实例，下次另一个线程来&lt;code&gt;GetInstance&lt;/code&gt;的时候，看到这个&lt;code&gt;singleton&lt;/code&gt;实例对象不为空，就表示已经创建过一个实例了，那就可以直接得到这个实例，避免再次锁。这是第一个 check的作用。 &lt;/p&gt;
&lt;p&gt;第二个check是解决锁竞争情况下的问题，假设现在两个线程来请求&lt;code&gt;GetInstance&lt;/code&gt;，A、B线程同时发现&lt;code&gt;singleton&lt;/code&gt;实例对象为空，因为我们在第一次check方法上没有加锁，然后A线程率先获得锁，进入同步代码块，new了一个&lt;code&gt;singleton&lt;/code&gt;实例对象，之后释放锁，接着B线程获得了这个锁，发现&lt;code&gt;singleton&lt;/code&gt;实例对象已经被创建了，就直接释放锁，退出同步代码块。所以这就是&lt;code&gt;Check-Lock-Check&lt;/code&gt;; 将上面的&lt;code&gt;singleton&lt;/code&gt;实例用&lt;code&gt;Check-Lock-Check&lt;/code&gt;机制实现如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; GetInstance() *singleton &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; instance == &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mu.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; mu.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; instance == &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            instance = &amp;amp;singleton&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过上面的&lt;code&gt;Check-Lock-Check&lt;/code&gt;机制,的确可以解决锁竟争的问题，但是这种方法不管是否&lt;code&gt;singleton&lt;/code&gt;实例对象是否已创建，每次都要执行两次check才是一个完整的判断，那有没有方法使得只要一次check就可以完成对&lt;code&gt;singleton&lt;/code&gt;实例对象是否存在的检查呢？ 有！通过&lt;code&gt;golang&lt;/code&gt;的&lt;code&gt;sync/atomic&lt;/code&gt;包提供的原子性操作可以更高效的完成这个检查，改进代码如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;sync/atomic&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; initialized &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; GetInstance() *singleton &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; atomic.LoadUInt32(&amp;amp;initialized) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mu.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; mu.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; initialized == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         instance = &amp;amp;singleton&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         atomic.StoreUint32(&amp;amp;initialized, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;改进之后的代码通过设置一个标志操作，使得&lt;code&gt;singleton&lt;/code&gt;实例对象创建之后，直接通过原子操作读取标志字段的值判断返回已经存在的实例，连锁操作及其后面的代码都略过了。&lt;/p&gt;
&lt;h2 id=&quot;u91C7_u7528atomic_u8FDB_u4E00_u6B65_u7B80_u5316&quot;&gt;&lt;a href=&quot;#u91C7_u7528atomic_u8FDB_u4E00_u6B65_u7B80_u5316&quot; class=&quot;headerlink&quot; title=&quot;采用atomic进一步简化&quot;&gt;&lt;/a&gt;采用atomic进一步简化&lt;/h2&gt;&lt;p&gt;上面通过&lt;code&gt;Check-Lock-Check&lt;/code&gt;机制改进之后似乎没有什么可做的了，先不急，来看看&lt;code&gt;golang&lt;/code&gt;原生标准包&lt;code&gt;sync&lt;/code&gt;包中对&lt;code&gt;Once&lt;/code&gt;实现的源码：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Once is an object that will perform exactly one action.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Once &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	m    Mutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	done &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Do calls the function f if and only if Do is being called for the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// first time for this instance of Once. In other words, given&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	var once Once&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// if once.Do(f) is called multiple times, only the first call will invoke f,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// even if f has a different value in each invocation.  A new instance of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Once is required for each function to execute.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Do is intended for initialization that must be run exactly once.  Since f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// is niladic, it may be necessary to use a function literal to capture the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// arguments to a function to be invoked by Do:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	config.once.Do(func() &amp;#123; config.init(filename) &amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Because no call to Do returns until the one call to f returns, if f causes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Do to be called, it will deadlock.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// If f panics, Do considers it to have returned; future calls of Do return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// without calling f.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (o *Once) Do(f &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; atomic.LoadUint32(&amp;amp;o.done) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;// &amp;lt;-- Check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Slow-path.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	o.m.Lock()                           &lt;span class=&quot;comment&quot;&gt;// &amp;lt;-- Lock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; o.m.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; o.done == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;                     &lt;span class=&quot;comment&quot;&gt;// &amp;lt;-- Check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; atomic.StoreUint32(&amp;amp;o.done, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		f()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到我们之前其实是借鉴了&lt;code&gt;golang&lt;/code&gt;原生标准包&lt;code&gt;sync&lt;/code&gt;中对&lt;code&gt;Once&lt;/code&gt;实现对源码，那既然标准包中已经实现了这个&lt;code&gt;Check-Lock-Check&lt;/code&gt;机制，那我们直接调用&lt;code&gt;sync&lt;/code&gt;包提供&lt;code&gt;once.Do()&lt;/code&gt;方法对某个方法只进行一次性调用：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;once.Do(&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;comment&quot;&gt;// perform safe initialization here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么下面是根据&lt;code&gt;sync&lt;/code&gt;包提供的&lt;code&gt;sync.Once&lt;/code&gt;改进的获取&lt;code&gt;singleton&lt;/code&gt;实例对象最终优化版本:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; singleton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;sync&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; singleton &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance *singleton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; once sync.Once&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; GetInstance() *singleton &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    once.Do(&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instance = &amp;amp;singleton&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因此使用&lt;code&gt;sync&lt;/code&gt;包提供的&lt;code&gt;sync.Once&lt;/code&gt;实现获取&lt;code&gt;singleton&lt;/code&gt;实例对象可以说是最安全有效又简洁的方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;golang&lt;/code&gt; 1.5版本之后默认设置&lt;code&gt;GOMAXPROCS&lt;/code&gt;值为当前计算机真实核心数，使得&lt;code&gt;goroutines&lt;/code&gt;从默认的&lt;code&gt;单线程内并发执行&lt;/code&gt;变成了默认的（真实核心数支持的）的&lt;code&gt;多线程内并行&lt;/code&gt;执行。多线程并行执行&lt;code&gt;goroutines&lt;/code&gt;需要考虑并行执行过程中引入的&lt;code&gt;线程安全问题&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="go-pattern" scheme="http://www.grdtechs.com/categories/go-pattern/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
      <category term="singleton" scheme="http://www.grdtechs.com/tags/singleton/"/>
    
  </entry>
  
  <entry>
    <title>golang 并发安全性案例分析</title>
    <link href="http://www.grdtechs.com/2016/02/24/go-concurrency-security/"/>
    <id>http://www.grdtechs.com/2016/02/24/go-concurrency-security/</id>
    <published>2016-02-24T21:47:55.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;golang&lt;/code&gt; 在1.5版本之前默认只使用一个核心来跑所有的&lt;code&gt;goroutines&lt;/code&gt;,即&lt;code&gt;GOMAXPROCS&lt;/code&gt;默认设置为1, ,即是串行执行&lt;code&gt;goroutines&lt;/code&gt;,在1.5版本后，&lt;code&gt;GOMAXPROCS&lt;/code&gt;默认设置为当前计算机真实的核心线程数，即是在并行执行&lt;code&gt;goroutines&lt;/code&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5E76_u884C_u6267_u884C_u5B89_u5168_u6027_u6848_u4F8B_u5206_u6790&quot;&gt;&lt;a href=&quot;#u5E76_u884C_u6267_u884C_u5B89_u5168_u6027_u6848_u4F8B_u5206_u6790&quot; class=&quot;headerlink&quot; title=&quot;并行执行安全性案例分析&quot;&gt;&lt;/a&gt;并行执行安全性案例分析&lt;/h2&gt;&lt;p&gt;利用计算机多核处理的特性，并行执行能成倍的提高程序的性能,但同时也带入了数据安全性问题，下面看一个在线银行转账的案例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Cash &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (u *User) sendCash(to *User, amount &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; u.Cash &amp;lt; amount &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* 设置延迟Sleep，当多个goroutines并行执行时,便于进行数据安全分析 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time.Sleep(&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt; * time.Millisecond)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	u.Cash = u.Cash - amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	to.Cash = to.Cash + amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	me := User&amp;#123;Cash: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	you := User&amp;#123;Cash: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.HandleFunc(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(w http.ResponseWriter, r *http.Request) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		me.sendCash(&amp;amp;you, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//转账&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;I have $%d\n&quot;&lt;/span&gt;, me.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;You have $%d\n&quot;&lt;/span&gt;, you.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;Total transferred: $%d\n&quot;&lt;/span&gt;, (you.Cash - &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;:8080&quot;&lt;/span&gt;, &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是一个通用的Go Web应用，定义User数据结构，sendCash是在两个User之间转账的服务，这里使用的是net/http 包，我们创建了一个简单的Http服务器，然后将请求路由到转账50元的sendCash方法，在正常操作下，代码会如我们预料一样运行，每次转移50美金，一旦一个用户的账户余额达到0美金，就不能再进行转出钞票了，因为没有钱了，但是，如果我们很快地发送很多请求，这个程序会继续转出很多钱，导致账户余额为负数。&lt;/p&gt;
&lt;p&gt;这是课本上经常谈到的竞争情况race condition，在这个代码中，账户余额的检查是与从账户中取钱操作分离的，我们假想一下，如果一个请求刚刚完成账户余额检查，但是还没有取钱，也就是没有减少账户余额数值；而另外一个请求线程同时也检查账户余额，发现账户余额还没有剩为零（结果两个请求都一起取钱，导致账户余额为负数），这是典型的”check-then-act”竞争情况。这是很普遍存在的 并发 bug。&lt;/p&gt;
&lt;h2 id=&quot;u7528_u9501_u89E3_u51B3_u7ADF_u6001_u6570_u636E_u5B89_u5168_u95EE_u9898&quot;&gt;&lt;a href=&quot;#u7528_u9501_u89E3_u51B3_u7ADF_u6001_u6570_u636E_u5B89_u5168_u95EE_u9898&quot; class=&quot;headerlink&quot; title=&quot;用锁解决竟态数据安全问题&quot;&gt;&lt;/a&gt;用锁解决竟态数据安全问题&lt;/h2&gt;&lt;p&gt;那么我们如何解决呢？我们肯定不能移除检查操作，而是确保检查和取钱两个动作之间没有任何其他操作发生，其他语言是使用锁，当账户进行更新时，锁住禁止同时有其他线程操作，确保一次只有一个进程操作，也就是排斥锁Mutex。,下面用&lt;code&gt;golang&lt;/code&gt;自带的&lt;code&gt;sync&lt;/code&gt;包实现对转账判断及数据操作过程的加锁：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Cash &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transferLock *sync.Mutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (u *User) sendCash(to *User, amount &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	transferLock.Lock() &lt;span class=&quot;comment&quot;&gt;//对转账操作进行加锁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; transferLock.Unlock() &lt;span class=&quot;comment&quot;&gt;//转账结束后解锁释放资源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; u.Cash &amp;lt; amount &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* 设置延迟Sleep，当多个goroutines并行执行时,便于进行数据安全分析 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time.Sleep(&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt; * time.Millisecond)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	u.Cash = u.Cash - amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	to.Cash = to.Cash + amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	me := User&amp;#123;Cash: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	you := User&amp;#123;Cash: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.HandleFunc(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(w http.ResponseWriter, r *http.Request) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		me.sendCash(&amp;amp;you, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//转账&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;I have $%d\n&quot;&lt;/span&gt;, me.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;You have $%d\n&quot;&lt;/span&gt;, you.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;Total transferred: $%d\n&quot;&lt;/span&gt;, (you.Cash - &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;:8080&quot;&lt;/span&gt;, &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5229_u7528Channel_2C_u66F4_u597D_u7684_u5B9E_u73B0_u5E76_u53D1&quot;&gt;&lt;a href=&quot;#u5229_u7528Channel_2C_u66F4_u597D_u7684_u5B9E_u73B0_u5E76_u53D1&quot; class=&quot;headerlink&quot; title=&quot;利用Channel,更好的实现并发&quot;&gt;&lt;/a&gt;利用Channel,更好的实现并发&lt;/h2&gt;&lt;p&gt;但是锁的问题很显然降低了&lt;code&gt;程序并发的性能&lt;/code&gt;，锁是并发设计的最大敌人，在Go中推荐使用通道&lt;code&gt;Channel&lt;/code&gt;，能够使用事件循环event loop机制更灵活地实现并发;通过委托一个后台协程监听通道，当通道中有数据时，立即进行转账操作，因为协程是顺序地读取通道中的数据，也就是巧妙地回避了竞争情况，没有必要使用任何状态变量防止&lt;code&gt;并发&lt;/code&gt;竞争了。 具体示例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Cash &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Transfer &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Sender    *User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Recipient *User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Amount    &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; sendCashHandler(transferchan &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; Transfer) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; val Transfer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		val = &amp;lt;-transferchan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		val.Sender.sendCash(val.Recipient, val.Amount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (u *User) sendCash(to *User, amount &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; u.Cash &amp;lt; amount &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* 设置延迟Sleep，当多个goroutines并行执行时,便于进行数据安全分析 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time.Sleep(&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt; * time.Millisecond)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	u.Cash = u.Cash - amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	to.Cash = to.Cash + amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	me := User&amp;#123;Cash: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	you := User&amp;#123;Cash: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	transferchan := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; Transfer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; sendCashHandler(transferchan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.HandleFunc(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(w http.ResponseWriter, r *http.Request) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		transfer := Transfer&amp;#123;Sender: &amp;amp;me, Recipient: &amp;amp;you, Amount: &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		transferchan &amp;lt;- transfer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;I have $%d\n&quot;&lt;/span&gt;, me.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;You have $%d\n&quot;&lt;/span&gt;, you.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;Total transferred: $%d\n&quot;&lt;/span&gt;, (you.Cash - &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	http.ListenAndServe(&lt;span class=&quot;string&quot;&gt;&quot;:8080&quot;&lt;/span&gt;, &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这段代码创建了比较可靠的系统从而避免了&lt;code&gt;并发&lt;/code&gt;竞争，但是我们会带来另外一个安全问题：&lt;code&gt;DoS(Denial of Service服务拒绝)&lt;/code&gt;，如果我们的转账操作慢下来，那么不断进来的请求需要等待进行转账操作的那个协程从通道中读取新数据，但是这个线程忙于照顾转账操作，没有闲功夫读取通道中新数据，这个情况会导致系统容易遭受&lt;code&gt;DoS攻击&lt;/code&gt;，外界只要发送大量请求就能让系统停止响应。&lt;/p&gt;
&lt;h2 id=&quot;u796D_u51FAselect__u8FDB_u4E00_u6B65_u63D0_u5347_u6027_u80FD&quot;&gt;&lt;a href=&quot;#u796D_u51FAselect__u8FDB_u4E00_u6B65_u63D0_u5347_u6027_u80FD&quot; class=&quot;headerlink&quot; title=&quot;祭出select 进一步提升性能&quot;&gt;&lt;/a&gt;祭出select 进一步提升性能&lt;/h2&gt;&lt;p&gt;一些基础机制比如buffered channel可以处理这种情况，但是buffered channel是有内存上限的，不足够保存所有请求数据，优化解决方案是使用Go杰出的&lt;code&gt;select&lt;/code&gt;语句：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http.HandleFunc(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(w http.ResponseWriter, r *http.Request) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 transfer := Transfer&amp;#123;Sender: &amp;amp;me, Recipient: &amp;amp;you, Amount: &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;comment&quot;&gt;/*转账*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 result := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(transferchan &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt;&amp;lt;- Transfer, transfer Transfer, result &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt;&amp;lt;- &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      transferchan &amp;lt;- transfer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      result &amp;lt;- &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#125;(transferchan, transfer, result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/*用select来处理超时机制*/&lt;/span&gt;	 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-result:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;I have $%d\n&quot;&lt;/span&gt;, me.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;You have $%d\n&quot;&lt;/span&gt;, you.Cash)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;Total transferred: $%d\n&quot;&lt;/span&gt;, (you.Cash - &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-time.After(time.Second * &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;): &lt;span class=&quot;comment&quot;&gt;//超时处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    fmt.Fprintf(w, &lt;span class=&quot;string&quot;&gt;&quot;Your request has been received, but is processing slowly&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里提升了事件循环，等待不能超过10秒，等待超过timeout时间，会返回一个消息给User告诉它们请求已经接受，可能会花点时间处理，请耐心等候即可，使用这种方法我们降低了&lt;code&gt;DoS攻击&lt;/code&gt;可能，一个真正健壮的能够&lt;code&gt;并发&lt;/code&gt;处理转账且没有使用任何锁的系统诞生了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;golang&lt;/code&gt; 在1.5版本之前默认只使用一个核心来跑所有的&lt;code&gt;goroutines&lt;/code&gt;,即&lt;code&gt;GOMAXPROCS&lt;/code&gt;默认设置为1, ,即是串行执行&lt;code&gt;goroutines&lt;/code&gt;,在1.5版本后，&lt;code&gt;GOMAXPROCS&lt;/code&gt;默认设置为当前计算机真实的核心线程数，即是在并行执行&lt;code&gt;goroutines&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="concurrency" scheme="http://www.grdtechs.com/tags/concurrency/"/>
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>golang 并发concurrency 使用总结</title>
    <link href="http://www.grdtechs.com/2016/02/17/go-concurrency-summarize/"/>
    <id>http://www.grdtechs.com/2016/02/17/go-concurrency-summarize/</id>
    <published>2016-02-17T13:47:51.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;go能处理高并发的根本原因在于执行go协程只需极少的栈内存(大概4~5KB),并且能根据需要动态增长和缩减占用的资源。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u9AD8_u5E76_u53D1_u7684_u672C_u8D28goroutine&quot;&gt;&lt;a href=&quot;#u9AD8_u5E76_u53D1_u7684_u672C_u8D28goroutine&quot; class=&quot;headerlink&quot; title=&quot;高并发的本质goroutine&quot;&gt;&lt;/a&gt;高并发的本质goroutine&lt;/h2&gt;&lt;p&gt;简单而言,&lt;code&gt;goroutine&lt;/code&gt;就是一段代码，一个函数入口，以及在堆上为其分配的一个堆栈。所以它非常廉价，我们可以很轻松的创建上万个&lt;code&gt;goroutine&lt;/code&gt;，但它们并不是被操作系统所调度执行,而是通过系统的线程来多路派遣这些函数的执行，使得每个用go关键字执行的函数可以运行成为一个单位协程。当一个协程阻塞的时候，调度器就会自动把其他协程安排到另外的线程中去执行，从而实现了程序无等待并行化运行。而且调度的开销非常小，一颗CPU调度的规模不下于每秒百万次，这使得在程序中能够创建大量的&lt;code&gt;goroutine&lt;/code&gt;，实现高并发的同时，依旧能保持高性能。&lt;br&gt;&lt;code&gt;goroutine&lt;/code&gt;是通过通信来共享内存,go中是通过&lt;code&gt;Channel&lt;/code&gt;来实现通信的，&lt;code&gt;Channel&lt;/code&gt;本身就像一根管道，go就通过这根管道进行数据的传递,实现消息通信。先来看一个简单的示例：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Go concurrency&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c &amp;lt;- &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;  v := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; c &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面的代码首先创建一个&lt;code&gt;bool&lt;/code&gt;的&lt;code&gt;Channel&lt;/code&gt;对象&lt;code&gt;c&lt;/code&gt;,然后通过&lt;code&gt;go&lt;/code&gt;关键字执行一个&lt;code&gt;goroutine&lt;/code&gt;,紧接着执行一个&lt;code&gt;for&lt;/code&gt;循环;&lt;code&gt;for&lt;/code&gt;会循环去读取&lt;code&gt;c&lt;/code&gt;中的值，如果读取到值，则执行&lt;code&gt;for&lt;/code&gt;循环体（打印v的值），没读取到则&lt;code&gt;for&lt;/code&gt;被阻塞等待,直到读取到&lt;code&gt;c&lt;/code&gt;中的值再去执行&lt;code&gt;for&lt;/code&gt;循环体然后继续循环读取&lt;code&gt;c&lt;/code&gt;，如果执行了&lt;code&gt;close(c)&lt;/code&gt;把&lt;code&gt;Channel&lt;/code&gt;对象&lt;code&gt;c&lt;/code&gt;关闭了，那&lt;code&gt;for&lt;/code&gt;循环就退出不执行了。 这就是通过&lt;code&gt;Channel&lt;/code&gt;通信执行&lt;code&gt;goroutine&lt;/code&gt;的一个简单示例。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上面通过make这样初始化的&lt;code&gt;Channel&lt;/code&gt;对象&lt;code&gt;c&lt;/code&gt;是既可以写又可以被读取的双向通道, 有时候为了避免被误读误写操作，可以初始化一个单向的&lt;code&gt;Channel&lt;/code&gt;对象。通过设置&lt;code&gt;Channel&lt;/code&gt;的长度可以分为有缓冲和无缓冲两种&lt;code&gt;Channel&lt;/code&gt;,无缓冲区的&lt;code&gt;Channel&lt;/code&gt;,在等待读或等待写的过程中都会引起&lt;code&gt;同步阻塞&lt;/code&gt;，而有缓冲区的&lt;code&gt;Channel&lt;/code&gt;,可以看作&lt;code&gt;异步执行&lt;/code&gt;,也可以认为控制为&lt;code&gt;同步执行&lt;/code&gt;，只有当缓冲区被占用完了之后才会引起&lt;code&gt;阻塞&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;//初始化缓冲区长度为3的Channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; send &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt;&amp;lt;- &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; = c &lt;span class=&quot;comment&quot;&gt;//只写入的Channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; recv &amp;lt;-&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; = c &lt;span class=&quot;comment&quot;&gt;//只读取的Channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  &lt;strong&gt; 注意: &lt;/strong&gt;  只读或只写的单向&lt;code&gt;Channel&lt;/code&gt; 都需要借助其它&lt;code&gt;Channel&lt;/code&gt;才有实际意义，定义一个只写入但是读取不出来的&lt;code&gt;Channel&lt;/code&gt;没有任何用处。单向&lt;code&gt;Channel&lt;/code&gt;用作函数形参用于防止参数在函数内部被误读误写是非常有帮助的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u5F00_u542F_u591A_u6838_u5E76_u884C_u5E76_u53D1_u6267_u884C&quot;&gt;&lt;a href=&quot;#u5F00_u542F_u591A_u6838_u5E76_u884C_u5E76_u53D1_u6267_u884C&quot; class=&quot;headerlink&quot; title=&quot;开启多核并行并发执行&quot;&gt;&lt;/a&gt;开启多核并行并发执行&lt;/h2&gt;&lt;p&gt;默认情况下，go所有的&lt;code&gt;goroutines&lt;/code&gt;是在一个线程中执行的，而不是同时利用多核进行并行执行，或者通过切换时间片让出CPU进行并发执行。下面看一段示例：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	runtime.GOMAXPROCS(runtime.NumCPU())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg := sync.WaitGroup&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Add(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; GoPrint(&amp;amp;wg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Wait()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; GoPrint(wg *sync.WaitGroup) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		time.Sleep(time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%d &quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;目前只有显示设置了&lt;code&gt;runtime.GOMAXPROCS&lt;/code&gt;,go才会开启多核并行执行&lt;code&gt;goroutines&lt;/code&gt;, 如果在&lt;code&gt;GoPrint&lt;/code&gt;方法中不加入&lt;code&gt;time.Sleep&lt;/code&gt;，输出的结果将会是&lt;code&gt;0 1 2 0 1 2 0 1 2&lt;/code&gt;，如果当前&lt;code&gt;goroutine&lt;/code&gt;不发生阻塞，它是不会让出CPU给其他&lt;code&gt;goroutine&lt;/code&gt;的, 所以在&lt;code&gt;GoPrint&lt;/code&gt;中不加&lt;code&gt;time.Sleep&lt;/code&gt;,输出会是一个一个&lt;code&gt;goroutine&lt;/code&gt;进行的，而sleep函数则阻塞掉了 当前&lt;code&gt;goroutine&lt;/code&gt;, 当前&lt;code&gt;goroutine&lt;/code&gt;主动让其他&lt;code&gt;goroutine&lt;/code&gt;执行, 所以形成了逻辑上的并行, 也就是并发。&lt;/p&gt;
&lt;h2 id=&quot;go_u5E76_u53D1_u6267_u884C_u5B89_u5168_u95EE_u9898&quot;&gt;&lt;a href=&quot;#go_u5E76_u53D1_u6267_u884C_u5B89_u5168_u95EE_u9898&quot; class=&quot;headerlink&quot; title=&quot;go并发执行安全问题&quot;&gt;&lt;/a&gt;go并发执行安全问题&lt;/h2&gt;&lt;p&gt;go并发执行当多个&lt;code&gt;goroutine&lt;/code&gt;同时访问一个共有的资源时，在不加锁的情况很容易出行数据不同步的问题，看一示例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; sell_tickets(wg *sync.WaitGroup, i &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; total_tickets &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mutex.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 如果有票就卖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; total_tickets &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			time.Sleep(time.Duration(rand.Intn(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)) * time.Millisecond)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 卖一张票&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			total_tickets--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;id:&quot;&lt;/span&gt;, i, &lt;span class=&quot;string&quot;&gt;&quot; ticket:&quot;&lt;/span&gt;, total_tickets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mutex.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面是一个多&lt;code&gt;goroutine&lt;/code&gt;并发买票的问题，比如当开启5个&lt;code&gt;goroutine&lt;/code&gt;来卖100张票，如果不加锁，则有可能会出行多出一些不存在的票的问题。所以当并发访问公有资源时要注意加锁保护公有资源属性修改的唯一性和访问时数据同步问题。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/golearning/blob/master/concurrency/concurrency_sync_mutex.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6279_u91CF_u5904_u7406_u591A_u4E2AChannel_u64CD_u4F5C&quot;&gt;&lt;a href=&quot;#u6279_u91CF_u5904_u7406_u591A_u4E2AChannel_u64CD_u4F5C&quot; class=&quot;headerlink&quot; title=&quot;批量处理多个Channel操作&quot;&gt;&lt;/a&gt;批量处理多个Channel操作&lt;/h2&gt;&lt;p&gt;go通过&lt;code&gt;Select&lt;/code&gt;可以同时处理多个&lt;code&gt;Channel&lt;/code&gt;,&lt;code&gt;Select&lt;/code&gt;默认是阻塞的，只有当监听的&lt;code&gt;Channel&lt;/code&gt;中有发送或接收可以进行时才会运行,当同时有多个可用的&lt;code&gt;Channel&lt;/code&gt;,&lt;code&gt;Select&lt;/code&gt;按随机顺序进行处理,&lt;code&gt;Select&lt;/code&gt;可以方便处理多&lt;code&gt;Channel&lt;/code&gt;同时响应，在goroutine阻塞的情况也可以方便借助&lt;code&gt;Select&lt;/code&gt;超时机制来解除阻塞僵局，下面来看一个示例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; getHttpRes(url &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) (&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;, error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; *http.Response, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	httpError := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; *error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		resp, err := http.Get(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			httpError &amp;lt;- &amp;amp;err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		res &amp;lt;- resp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; r := &amp;lt;-res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			result, err := ioutil.ReadAll(r.Body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; r.Body.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(result), err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; err := &amp;lt;-httpError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;err&quot;&lt;/span&gt;, *err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-time.After(&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt; * time.Millisecond):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Timed out&quot;&lt;/span&gt;, errors.New(&lt;span class=&quot;string&quot;&gt;&quot;Timed out&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发起http请求之后通常会有三种状况:1.访问成功，返回内容值;2.访问失败，返回错误信息;3.访问超时，返回超时。上面的代码中利用&lt;code&gt;Select&lt;/code&gt;很方便的处理了go并发执行中多可用&lt;code&gt;Channel&lt;/code&gt;的处理问题，通过设置超时，帮助程序跳出超时等待的僵局。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/golearning/blob/master/concurrency/select_timeout.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;go能处理高并发的根本原因在于执行go协程只需极少的栈内存(大概4~5KB),并且能根据需要动态增长和缩减占用的资源。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="concurrency" scheme="http://www.grdtechs.com/tags/concurrency/"/>
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>golang reflect使用总结</title>
    <link href="http://www.grdtechs.com/2016/02/17/go-reflect-summarize/"/>
    <id>http://www.grdtechs.com/2016/02/17/go-reflect-summarize/</id>
    <published>2016-02-17T08:57:59.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;反射是一种检查存储在接口变量中的&lt;code&gt;&amp;lt;值,类型&amp;gt;&lt;/code&gt;对的机制，借助go反射包提供的&lt;code&gt;reflect.TypeOf&lt;/code&gt;和&lt;code&gt;reflect.ValueOf&lt;/code&gt;可以方便的访问到一个接口值的&lt;code&gt;reflect.Type&lt;/code&gt;和&lt;code&gt;reflect.Value&lt;/code&gt;部分，从而可进一步得到这个接口的结构类型和对其进行值的修改操作。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u53CD_u5C04_u7684_u4F7F_u7528&quot;&gt;&lt;a href=&quot;#u53CD_u5C04_u7684_u4F7F_u7528&quot; class=&quot;headerlink&quot; title=&quot;反射的使用&quot;&gt;&lt;/a&gt;反射的使用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;获取接口对象的字段,类型和方法信息&lt;/strong&gt;&lt;br&gt;先定义个通用的结构体&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;type User struct{
    Id int
    Name string
    Age int
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将接口对象类型信息映射为反射类型信息&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;golang&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; Info(o &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;{}) {
    t := reflect.TypeOf(o)         &lt;span class=&quot;comment&quot;&gt;//获取接口的类型&lt;/span&gt;
    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Type:&quot;&lt;/span&gt;, t.Name()) &lt;span class=&quot;comment&quot;&gt;//t.Name() 获取接口的名称&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; t.Kind() != refelct.Struct { &lt;span class=&quot;comment&quot;&gt;//通过Kind()来判断反射出的类型是否为需要的类型&lt;/span&gt;
        fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;err: type invalid!&quot;&lt;/span&gt;)        
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;
    }        

    v := reflect.ValueOf(o) &lt;span class=&quot;comment&quot;&gt;//获取接口的值类型&lt;/span&gt;
    fmt.Println(&lt;span class=&quot;string&quot;&gt;&quot;Fields:&quot;&lt;/span&gt;)

    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; t.NumField(); i++ { &lt;span class=&quot;comment&quot;&gt;//NumField取出这个接口所有的字段数量&lt;/span&gt;
    f := t.Field(i)                                   &lt;span class=&quot;comment&quot;&gt;//取得结构体的第i个字段&lt;/span&gt;
    val := v.Field(i).Interface()                     &lt;span class=&quot;comment&quot;&gt;//取得字段的值&lt;/span&gt;
    fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%6s: %v = %v\n&quot;&lt;/span&gt;, f.Name, f.Type, val) &lt;span class=&quot;comment&quot;&gt;//第i个字段的名称,类型,值&lt;/span&gt;
    }

    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; t.NumMethod(); i++{
        m := t.Method(i)
        fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%6s: %v\n&quot;&lt;/span&gt;, m.Name,m.Type) &lt;span class=&quot;comment&quot;&gt;//获取方法的名称和类型       &lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;获取接口对象的类型名称，通过&lt;code&gt;refelct.TypeOf()&lt;/code&gt;获取接口对象的类型,并通过&lt;code&gt;Name()&lt;/code&gt;方法获取接口的名称。&lt;br&gt;获取对象中所有字段的名称,类型和值,通过&lt;code&gt;reflect.ValueOf()&lt;/code&gt;获取接口对象的值类型取得字段的名称和类型,然后通过&lt;code&gt;v.Field(i).Interface()&lt;/code&gt;取得第i个字段的值。&lt;br&gt;还可以通过&lt;code&gt;NumMethod()&lt;/code&gt;循环获取接口对象所有方法的名称和类型。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/golearning/blob/master/reflect/01reflect.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;反射接口对象中的匿名或嵌入字段信息&lt;/strong&gt;&lt;br&gt;先再添加一个Manager结构,User作为它的匿名字段&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;type Manager struct{
    User
    title string
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;初始化Manager的两种方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;m0 := Manager{User: User{1,&amp;quot;Mike&amp;quot;,11},title: &amp;quot;Man&amp;quot;}
m1 := Manager{User{1,&amp;quot;Mike&amp;quot;,11},&amp;quot;Man&amp;quot;} //这种初始化,赋值顺序必须和结构体中的声明顺序相同! 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在如何来取出Manager中的匿名字段User？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;t := refelct.TypeOf(m)
fmt.Printf(&amp;quot;%#v\n&amp;quot;, t.Field(0))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如上述代码，通过&lt;code&gt;t := refelct.TypeOf(m)&lt;/code&gt;将Manager的字段类型取出来,在反射中对象字段是通过索引取到的，所以可通过&lt;code&gt;t.Field(0)&lt;/code&gt;,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#reflect.StructField{Name:&amp;quot;User&amp;quot;, PkgPath:&amp;quot;&amp;quot;, Type:(*reflect.rtype)(0xedd20), Tag:&amp;quot;&amp;quot;, Offset:0x0, Index:[]int{0}, Anonymous:true}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还可以通过&lt;code&gt;FieldByIndex&lt;/code&gt;和&lt;code&gt;FieldByName&lt;/code&gt;两种方法取得匿名结构体中的字段属性&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给&lt;code&gt;FieldByIndex()&lt;/code&gt;传入一个int型的slice索引,如&lt;code&gt;FieldByIndex([]int{0,0})&lt;/code&gt;即取得User结构体中的Id字段。&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;FieldByName(&amp;quot;Id&amp;quot;)&lt;/code&gt;也可以取得User结构体中Id字段。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u901A_u8FC7_u53CD_u5C04_u4FEE_u6539_u5BF9_u8C61&quot;&gt;&lt;a href=&quot;#u901A_u8FC7_u53CD_u5C04_u4FEE_u6539_u5BF9_u8C61&quot; class=&quot;headerlink&quot; title=&quot;通过反射修改对象&quot;&gt;&lt;/a&gt;通过反射修改对象&lt;/h2&gt;&lt;p&gt;上面通过&lt;code&gt;reflect.TypeOf&lt;/code&gt;和&lt;code&gt;reflect.ValueOf&lt;/code&gt;已经可以得到接口对象的类型,字段和方法等属性了，怎么通过反射来修改对象的字段值？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x := 100
v := refelct.ValueOf(&amp;amp;x) //传入地址
v.Elem().SetInt(200) //成功修改x值为200
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要修改变量x的值，首先就要通过&lt;code&gt;reflect.ValueOf&lt;/code&gt;来获取x的值类型,&lt;code&gt;refelct.ValueOf&lt;/code&gt;返回的值类型是变量x一份值拷贝,要修改变量x就要传递x的地址,从而返回x的地址对象,才可以进行对x变量值对修改操作。在得到x变量的地址值类型之后先调用&lt;code&gt;Elem()&lt;/code&gt;返回地址指针指向的值的Value封装。然后通过&lt;code&gt;Set&lt;/code&gt;方法进行修改赋值。&lt;br&gt;通过反射可以很容易的修改变量的值，怎么来修改结构体中的字段值？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func SetInfo(o interface{}) {
        v := reflect.ValueOf(o)

        if v.Kind() == reflect.Ptr &amp;amp;&amp;amp; !v.Elem().CanSet() { //判断是否为指针类型 元素是否可以修改
            fmt.Println(&amp;quot;cannot set&amp;quot;)
                return
        } else {
            v = v.Elem() //实际取得的对象
        }

        //判断字段是否存在
        f := v.FieldByName(&amp;quot;Name&amp;quot;)
        if !f.IsValid() {
            fmt.Println(&amp;quot;wuxiao&amp;quot;)
                return
        }

        //设置字段
        if f := v.FieldByName(&amp;quot;Name&amp;quot;); f.Kind() == reflect.String {
            f.SetString(&amp;quot;BY&amp;quot;)
        }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要成功修改结构体中的某个字段,主要进行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先要反射出这个字段的地址值类型;&lt;/li&gt;
&lt;li&gt;判断反射返回类型是否为&lt;code&gt;reflect.Ptr&lt;/code&gt;指针类型（通过指针才能操作对象地址中的值)同时还要判断这个元素是否可以修改;&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;FieldByName&lt;/code&gt;的返回值判断字段是否存在&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;Kind()&lt;/code&gt;和&lt;code&gt;Set&lt;/code&gt;来修改字段的值&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/golearning/blob/master/reflect/02reflect.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;u901A_u8FC7_u53CD_u5C04_u201C_u52A8_u6001_u201D_u8C03_u7528_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u901A_u8FC7_u53CD_u5C04_u201C_u52A8_u6001_u201D_u8C03_u7528_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;通过反射“动态”调用方法&quot;&gt;&lt;/a&gt;通过反射“动态”调用方法&lt;/h2&gt;&lt;p&gt;现在已经可以通过反射获取并修改接口对象的字段，类型等信息了，那怎么通过反射“动态”调用接口对象等方法？&lt;br&gt;先为&lt;code&gt;User&lt;/code&gt;结构体引入一个&lt;code&gt;Hello&lt;/code&gt;方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func (u User) Hello(m User) (int, string) {
    fmt.Println(&amp;quot;Hello&amp;quot;, m.Name, &amp;quot;, I&amp;apos;m &amp;quot;, u.Name)
    return m.Age + u.Age, u.Name
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面通过反射来调用&lt;code&gt;Hello&lt;/code&gt;这个方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func GetInfo(u interface{}) {
    m := User{2, &amp;quot;Json&amp;quot;, 12}

    v := reflect.ValueOf(u)

    if v.Kind() != reflect.Struct {
        fmt.Println(&amp;quot;type invalid&amp;quot;)
        return
    }

    mv := v.MethodByName(&amp;quot;Hello&amp;quot;) //获取对应的方法
    if !mv.IsValid() {            //判断方法是否存在
        fmt.Println(&amp;quot;Func Hello not exist&amp;quot;)
        return
    }

    args := []reflect.Value{reflect.ValueOf(m)} //初始化传入等参数，传入等类型只能是[]reflect.Value类型
    res := mv.Call(args)
    fmt.Println(res[0], res[1])

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过&lt;code&gt;MethodByName&lt;/code&gt;先获取对象的&lt;code&gt;Hello&lt;/code&gt;方法,然后准备要传入的参数,这里传入的参数必须是&lt;code&gt;[]refelct.Value&lt;/code&gt;类型,传入的参数值必须强制转换为反射值类型&lt;code&gt;refelct.Value&lt;/code&gt;。&lt;br&gt;最后通过调用&lt;code&gt;Call&lt;/code&gt;方法就可以实现通过反射”动态”调用对象的方法。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/golearning/blob/master/reflect/03reflect.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5C0F_u7ED3&quot;&gt;&lt;a href=&quot;#u5C0F_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过反射包提供&lt;code&gt;refelct.TypeOf&lt;/code&gt;和&lt;code&gt;refelct.ValueOf&lt;/code&gt;方法获得接口对象的类型，值和方法等。&lt;/li&gt;
&lt;li&gt;通过反射修改字段值等时候需要传入地址类型，并且需要检查反射返回值类型是否为&lt;code&gt;refelct.Ptr&lt;/code&gt;，检查字段是否&lt;code&gt;CanSet&lt;/code&gt;,检查字段是存在,然后通过&lt;code&gt;Kind()&lt;/code&gt;来帮助赋值相应对类型值。&lt;/li&gt;
&lt;li&gt;最后总结了通过&lt;code&gt;MethodByName&lt;/code&gt;等方法如何“动态”调用对象的方法，示例代码也演示了如何传入和接收多个参数值。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;反射是一种检查存储在接口变量中的&lt;code&gt;&amp;lt;值,类型&amp;gt;&lt;/code&gt;对的机制，借助go反射包提供的&lt;code&gt;reflect.TypeOf&lt;/code&gt;和&lt;code&gt;reflect.ValueOf&lt;/code&gt;可以方便的访问到一个接口值的&lt;code&gt;reflect.Type&lt;/code&gt;和&lt;code&gt;reflect.Value&lt;/code&gt;部分，从而可进一步得到这个接口的结构类型和对其进行值的修改操作。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
      <category term="reflect" scheme="http://www.grdtechs.com/tags/reflect/"/>
    
  </entry>
  
  <entry>
    <title>golang xorm库使用总结</title>
    <link href="http://www.grdtechs.com/2016/01/21/go-xorm-summarize/"/>
    <id>http://www.grdtechs.com/2016/01/21/go-xorm-summarize/</id>
    <published>2016-01-21T17:50:07.000Z</published>
    <updated>2016-07-14T07:26:17.571Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/go-xorm/xorm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XORM&lt;/a&gt;是一个简单而强大的Go语言&lt;code&gt;ORM(Object Relational Mapping)&lt;/code&gt;库,通过调用&lt;code&gt;XORM&lt;/code&gt;提供简单丰富的API接口,可以简化便捷的完成对数据库的各类操作。&lt;code&gt;XORM&lt;/code&gt;目前已经支持所有主流关系型数据库,如Mysql,SQLite,Oracle,Postgres等。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5B89_u88C5_u53CA_u7279_u6027&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_u53CA_u7279_u6027&quot; class=&quot;headerlink&quot; title=&quot;安装及特性&quot;&gt;&lt;/a&gt;安装及特性&lt;/h2&gt;&lt;p&gt;&lt;code&gt;XORM&lt;/code&gt;的安装很简单， 具体可参看&lt;a href=&quot;http://xorm.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网安装&lt;/a&gt;。&lt;br&gt;未完待续&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/go-xorm/xorm&quot;&gt;XORM&lt;/a&gt;是一个简单而强大的Go语言&lt;code&gt;ORM(Object Relational Mapping)&lt;/code&gt;库,通过调用&lt;code&gt;XORM&lt;/code&gt;提供简单丰富的API接口,可以简化便捷的完成对数据库的各类操作。&lt;code&gt;XORM&lt;/code&gt;目前已经支持所有主流关系型数据库,如Mysql,SQLite,Oracle,Postgres等。&lt;br&gt;
    
    </summary>
    
      <category term="golang" scheme="http://www.grdtechs.com/categories/golang/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
      <category term="xorm" scheme="http://www.grdtechs.com/tags/xorm/"/>
    
  </entry>
  
  <entry>
    <title>[译]GO BOOTCAMP 第四章：集合类型</title>
    <link href="http://www.grdtechs.com/2016/01/19/go-collection-types/"/>
    <id>http://www.grdtechs.com/2016/01/19/go-collection-types/</id>
    <published>2016-01-19T09:24:38.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;集合类型包含&lt;code&gt;Array&lt;/code&gt;,&lt;code&gt;Slice&lt;/code&gt;,&lt;code&gt;Range&lt;/code&gt;,&lt;code&gt;Map&lt;/code&gt;等议题的分析和讨论。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Array-_u6570_u7EC4&quot;&gt;&lt;a href=&quot;#Array-_u6570_u7EC4&quot; class=&quot;headerlink&quot; title=&quot;Array-数组&quot;&gt;&lt;/a&gt;Array-数组&lt;/h2&gt;&lt;p&gt;未完待续…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;集合类型包含&lt;code&gt;Array&lt;/code&gt;,&lt;code&gt;Slice&lt;/code&gt;,&lt;code&gt;Range&lt;/code&gt;,&lt;code&gt;Map&lt;/code&gt;等议题的分析和讨论。&lt;br&gt;
    
    </summary>
    
      <category term="go-bootcamp" scheme="http://www.grdtechs.com/categories/go-bootcamp/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>[译]GO BOOTCAMP 第三章：内置类型实战</title>
    <link href="http://www.grdtechs.com/2016/01/17/go-types/"/>
    <id>http://www.grdtechs.com/2016/01/17/go-types/</id>
    <published>2016-01-17T21:36:28.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;内置类型实战，包括类型转换，类型断言，结构类型，结构继承等内容。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u57FA_u672C_u7C7B_u578B&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u7C7B_u578B&quot; class=&quot;headerlink&quot; title=&quot;基本类型&quot;&gt;&lt;/a&gt;基本类型&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;语言主要有如下内置基本类型，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Numeric types:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;uint&lt;/span&gt;        either &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; or &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt; bits&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;         same size as &lt;span class=&quot;typename&quot;&gt;uint&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;uintptr&lt;/span&gt;     an unsigned integer large enough to store the uninterpreted bits of&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            a pointer value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;uint8&lt;/span&gt;       the set of all unsigned  &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;-bit integers (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;uint16&lt;/span&gt;      the set of all unsigned &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;-bit integers (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;65535&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;      the set of all unsigned &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;-bit integers (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;4294967295&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt;      the set of all unsigned &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;-bit integers (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;18446744073709551615&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;int8&lt;/span&gt;        the set of all signed  &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;-bit integers (-&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;int16&lt;/span&gt;       the set of all signed &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;-bit integers (-&lt;span class=&quot;number&quot;&gt;32768&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;32767&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;int32&lt;/span&gt;       the set of all signed &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;-bit integers (-&lt;span class=&quot;number&quot;&gt;2147483648&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;int64&lt;/span&gt;       the set of all signed &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;-bit integers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (-&lt;span class=&quot;number&quot;&gt;9223372036854775808&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;9223372036854775807&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;float32&lt;/span&gt;     the set of all IEEE-&lt;span class=&quot;number&quot;&gt;754&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;-bit floating-point numbers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;     the set of all IEEE-&lt;span class=&quot;number&quot;&gt;754&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;-bit floating-point numbers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;complex64&lt;/span&gt;   the set of all &lt;span class=&quot;built_in&quot;&gt;complex&lt;/span&gt; numbers with &lt;span class=&quot;typename&quot;&gt;float32&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;real&lt;/span&gt; and imaginary parts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;complex128&lt;/span&gt;  the set of all &lt;span class=&quot;built_in&quot;&gt;complex&lt;/span&gt; numbers with &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;real&lt;/span&gt; and imaginary parts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;byte&lt;/span&gt;        alias &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;uint8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;rune&lt;/span&gt;        alias &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int32&lt;/span&gt; (represents a Unicode code point)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;内置类型基本使用示例，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;math/cmplx&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	goIsFun &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;       = &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	maxInt  &lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt;     = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;complex&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;complex128&lt;/span&gt; = cmplx.Sqrt(-&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;12i&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; f = &lt;span class=&quot;string&quot;&gt;&quot;%T(%v)\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(f, goIsFun, goIsFun)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(f, maxInt, maxInt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(f, &lt;span class=&quot;built_in&quot;&gt;complex&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;complex&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uint64(&lt;span class=&quot;number&quot;&gt;18446744073709551615&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;complex128((&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;i))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7C7B_u578B_u8F6C_u6362&quot;&gt;&lt;a href=&quot;#u7C7B_u578B_u8F6C_u6362&quot; class=&quot;headerlink&quot; title=&quot;类型转换&quot;&gt;&lt;/a&gt;类型转换&lt;/h2&gt;&lt;p&gt;&lt;code&gt;T(v)&lt;/code&gt;表示将&lt;code&gt;v&lt;/code&gt;的类型转换为&lt;code&gt;T&lt;/code&gt;类型，一些数值类型转换如下，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt; = &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; u &lt;span class=&quot;typename&quot;&gt;uint&lt;/span&gt; = &lt;span class=&quot;typename&quot;&gt;uint&lt;/span&gt;(f)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;简化一下,&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;i := &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f := &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u := &lt;span class=&quot;typename&quot;&gt;uint&lt;/span&gt;(f)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;语言中不同类型之间需要显示转换才能相互赋值，如传入的参数类型与函数接收的参数不同时，需要手动进行类型转换才能传入。&lt;br&gt;&lt;strong&gt;译者注:&lt;/strong&gt; &lt;code&gt;Go&lt;/code&gt;语言中除了&lt;code&gt;byte&lt;/code&gt;和&lt;code&gt;uint8&lt;/code&gt;之间以及&lt;code&gt;rune&lt;/code&gt;和&lt;code&gt;int32&lt;/code&gt;之间可以相互进行赋值操作外，其它不同类型直接都需要显示转换才能进行相互赋值操作。 如,&lt;br&gt;    &lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;typename&quot;&gt;byte&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; u &lt;span class=&quot;typename&quot;&gt;uint8&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u = i &lt;span class=&quot;comment&quot;&gt;// 可以直接赋值，不需显示转换 ，同样rune 与 int32 之间也是一样的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt; = &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;(i) &lt;span class=&quot;comment&quot;&gt;//这里需要显示将 int 转换float64 才能赋值成功!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7C7B_u578B_u65AD_u8A00&quot;&gt;&lt;a href=&quot;#u7C7B_u578B_u65AD_u8A00&quot; class=&quot;headerlink&quot; title=&quot;类型断言&quot;&gt;&lt;/a&gt;类型断言&lt;/h2&gt;&lt;p&gt;如果想判断一个变量的数据类型,或将当前类型(如 interface{})作相应的类型判断,可以借助类型断言来解决。类型断言试图将当前变量转换为指定的数据类型，并返回转换之后相应的指针对象（如果转换成功）及是否转换成功的标志值。下面示例中，&lt;code&gt;timeMap&lt;/code&gt;函数接受一个变量，并断言这个变量类型是否为&lt;code&gt;map[string]interface{}&lt;/code&gt;类型，如果是则为其初始化一个&lt;code&gt;key&lt;/code&gt;为&lt;code&gt;updated_at&lt;/code&gt;,&lt;code&gt;value&lt;/code&gt;为&lt;code&gt;time.Now()&lt;/code&gt;的值对。&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; timeMap(y &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	z, ok := y.(&lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;]&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ok &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		z[&lt;span class=&quot;string&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;] = time.Now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	foo := &lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;]&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	timeMap(foo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Println(foo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;语言并不对空接口&lt;code&gt;interface{}&lt;/code&gt;进行类型断言，如果函数内部如对不同类型参数会作出不同的处理，则通常需借助类型断言来完成，如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Stringer &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String() &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; fakeString &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	content &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (s *fakeString) String() &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s.content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; printString(value &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&amp;#123;&amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; str := value.(&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Println(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; Stringer:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Println(str.String())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果给&lt;code&gt;printString&lt;/code&gt;传入一个&lt;code&gt;fakeString&lt;/code&gt;,因为&lt;code&gt;fakeString&lt;/code&gt;实现了&lt;code&gt;Stringer&lt;/code&gt;方法，那么&lt;code&gt;printString&lt;/code&gt;中会处理&lt;code&gt;Stringer&lt;/code&gt;这个case,如果直接传入一个字符串给&lt;code&gt;printString&lt;/code&gt;，则显然会处理&lt;code&gt;string&lt;/code&gt;这个case 从而直接输出传入的字符串。&lt;br&gt;&lt;a href=&quot;https://github.com/researchlab/go-bootcamp/blob/master/ch03/type_assertion.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;br&gt;类型断言也可以用于判断具体的&lt;code&gt;error&lt;/code&gt;类型，如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; msqlerr, ok := err.(*mysql.MySQLError); ok &amp;amp;&amp;amp; msqlerr.Number == &lt;span class=&quot;number&quot;&gt;1062&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    	log.Println(&lt;span class=&quot;string&quot;&gt;&quot;We got a MySQL duplicate :(&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7ED3_u6784&quot;&gt;&lt;a href=&quot;#u7ED3_u6784&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h2&gt;&lt;p&gt;&lt;code&gt;struct&lt;/code&gt;是多个字段或属性的集合，用户也可以自定义一个像&lt;code&gt;struct&lt;/code&gt;或&lt;code&gt;interface&lt;/code&gt;这样的数据类型。如果你学过面向对象编程，你可以将&lt;code&gt;struct&lt;/code&gt;理解为一个轻量级的&lt;code&gt;class&lt;/code&gt;支持字段属性的集合，但不支持继承。&lt;code&gt;struct&lt;/code&gt;中默认提供&lt;code&gt;get&lt;/code&gt;和&lt;code&gt;set&lt;/code&gt;方法，需要注意的是只有首字母大写的&lt;code&gt;struct&lt;/code&gt;变量才能被包访问。&lt;code&gt;struct&lt;/code&gt;可以通过&lt;code&gt;Name:&lt;/code&gt;后跟初始值来初始化&lt;code&gt;struct&lt;/code&gt;,这样初始化时可以不按&lt;code&gt;struct&lt;/code&gt;中字段声明的顺序进行初始化，如果在&lt;code&gt;struct&lt;/code&gt;变量前加上&lt;code&gt;&amp;amp;&lt;/code&gt;符号，返回的是一个指向这个&lt;code&gt;struct&lt;/code&gt;的指针对象。&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Bootcamp &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Latitude of the event&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Lat &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Longitude of the event&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Lon &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Date of the event&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Date time.Time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(Bootcamp&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Lat:  &lt;span class=&quot;number&quot;&gt;34.012836&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Lon:  -&lt;span class=&quot;number&quot;&gt;118.495338&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Date: time.Now(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;声明并初始化&lt;code&gt;struct&lt;/code&gt;对象，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Point &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	X, Y &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p = Point&amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;// 初始化一个Point对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	q = &amp;amp;Point&amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;// 初始化一个Point指针对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	r = Point&amp;#123;X: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;// Y值默认为0 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	s = Point&amp;#123;&amp;#125;      &lt;span class=&quot;comment&quot;&gt;// X和Y的值都默认为0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(p, q, r, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/researchlab/go-bootcamp/blob/master/ch03/declaration_struct.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可通过&lt;code&gt;.&lt;/code&gt;符号访问&lt;code&gt;struct&lt;/code&gt;中的成员变量，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Bootcamp &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Lat, Lon &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Date     time.Time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	event := Bootcamp&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Lat: &lt;span class=&quot;number&quot;&gt;34.012836&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Lon: -&lt;span class=&quot;number&quot;&gt;118.495338&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	event.Date = time.Now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Event on %s, location (%f, %f)&quot;&lt;/span&gt;,event.Date, event.Lat, event.Lon)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/researchlab/go-bootcamp/blob/master/ch03/access_struct_field.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u521D_u59CB_u5316&quot;&gt;&lt;a href=&quot;#u521D_u59CB_u5316&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;支持用&lt;code&gt;new&lt;/code&gt;表达式初始化变量，分配一个类型零值并返回指向这个类型的指针给变量。&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x := &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt;(&lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一种常见的初始化一个包含&lt;code&gt;struct&lt;/code&gt;或引用变量的方法是创建一个&lt;code&gt;struct&lt;/code&gt;字段。另一种方法是通过创建构造函数来完成初始化操作。这两种方法是当需要自定义初始化字段值常用的两种方法。下面用&lt;code&gt;new&lt;/code&gt;方法和用空&lt;code&gt;struct&lt;/code&gt;字段初始化一个&lt;code&gt;struct&lt;/code&gt;是等价的，如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Bootcamp &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Lat &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Lon &lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	x := &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt;(Bootcamp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	y := &amp;amp;Bootcamp&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(*x == *y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面&lt;code&gt;x&lt;/code&gt;和&lt;code&gt;y&lt;/code&gt;的初始化操作是等价的；后面要接触的&lt;code&gt;slices&lt;/code&gt;，&lt;code&gt;maps&lt;/code&gt;和&lt;code&gt;channels&lt;/code&gt;结构初始化一般需要自定义初始化字段如长度，容量等，所以这些结构通常用&lt;code&gt;make&lt;/code&gt;关键字来初始化操作。&lt;/p&gt;
&lt;h2 id=&quot;u7EC4_u5408vs_u7EE7_u627F&quot;&gt;&lt;a href=&quot;#u7EC4_u5408vs_u7EE7_u627F&quot; class=&quot;headerlink&quot; title=&quot;组合vs继承&quot;&gt;&lt;/a&gt;组合vs继承&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;不支持面向对象编程中的继承操作，但是可以使用组合和接口来完成继承的操作。&lt;code&gt;Go&lt;/code&gt;支持&lt;code&gt;OOP&lt;/code&gt;中的组合（或者说绑定）操作。下面是一个关于地址操作的示例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Id       &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Name     &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GameId   &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p := Player&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Id = &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Name = &lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Location = &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.GameId = &lt;span class=&quot;number&quot;&gt;90404&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%+v&quot;&lt;/span&gt;, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/researchlab/go-bootcamp/blob/master/ch03/composition_case.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;br&gt;上面地址的案例是一个经典的&lt;code&gt;OOP&lt;/code&gt;例子，现在考虑到&lt;code&gt;Player&lt;/code&gt; struct和&lt;code&gt;User&lt;/code&gt;struct有相同的字段，但是&lt;code&gt;Player&lt;/code&gt;还有一个自己的&lt;code&gt;GameId&lt;/code&gt;字段，用&lt;code&gt;OOP&lt;/code&gt;思想则声明&lt;code&gt;Player&lt;/code&gt;和&lt;code&gt;User&lt;/code&gt;struct，会存在重复声明相同的字段，但是在&lt;code&gt;Go&lt;/code&gt;中可以通过组合&lt;code&gt;struct&lt;/code&gt;来简化这样的情况,&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Id             &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Name, Location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GameId &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在可通过两种方法来初始化一个&lt;code&gt;Player&lt;/code&gt;结构。第一种使用&lt;code&gt;.&lt;/code&gt;来设置&lt;code&gt;struct&lt;/code&gt;字段,&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Id             &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Name, Location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GameId &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p := Player&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Id = &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Name = &lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Location = &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.GameId = &lt;span class=&quot;number&quot;&gt;90404&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%+v&quot;&lt;/span&gt;, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;另一种初始化方法是使用&lt;code&gt;struct&lt;/code&gt;字段初始化语法&lt;code&gt;Name:&lt;/code&gt;来初始化，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Id             &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Name, Location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GameId &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p := Player&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	User&amp;#123;Id: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;, Name: &lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;, Location: &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;&amp;#125;,&lt;span class=&quot;number&quot;&gt;90404&lt;/span&gt;,&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Id: %d, Name: %s, Location: %s, Game id: %d\n&quot;&lt;/span&gt;,	p.Id, p.Name, p.Location, p.GameId)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Directly set a field define on the Player struct&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Id = &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%+v&quot;&lt;/span&gt;, p)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当需要调用匿名结构中的字段时，不能直接引用相应的字段，而是需要通过当前结构对象来调用，如&lt;code&gt;User&lt;/code&gt;作为匿名结构嵌入在&lt;code&gt;Player&lt;/code&gt;中，所以通过&lt;code&gt;Player&lt;/code&gt;对象能调用到&lt;code&gt;User&lt;/code&gt;中到字段，但是不能直接通过&lt;code&gt;User&lt;/code&gt;中到字段名去调用，示例如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Id             &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Name, Location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (u *User) Greetings() &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fmt.Sprintf(&lt;span class=&quot;string&quot;&gt;&quot;Hi %s from %s&quot;&lt;/span&gt;,u.Name, u.Location)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GameId &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p := Player&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Id = &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Name = &lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p.Location = &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(p.Greetings())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过当前结构体对象引用嵌入到匿名结构体中的字段对构建数据结构非常有效，当嵌入对匿名结构实现了某个接口，那当前结构也就自动实现了这个接口了。下面来看另一个示例，&lt;code&gt;Job&lt;/code&gt;结构中嵌入了&lt;code&gt;Logger&lt;/code&gt;结构，那相当于&lt;code&gt;Job&lt;/code&gt;也实现了&lt;code&gt;Logger&lt;/code&gt;实现的了日志接口，如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Job &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Command &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Logger  *log.Logger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	job := &amp;amp;Job&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;demo&quot;&lt;/span&gt;, log.New(os.Stderr, &lt;span class=&quot;string&quot;&gt;&quot;Job: &quot;&lt;/span&gt;, log.Ldate)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 也可这样初始化job&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// job := &amp;amp;Job&amp;#123;Command: &quot;demo&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//       Logger: log.New(os.Stderr, &quot;Job: &quot;, log.Ldate)&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	job.Logger.Print(&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Job&lt;/code&gt;结构中有个字段&lt;code&gt;Logger&lt;/code&gt;是一个指向&lt;code&gt;log.Logger&lt;/code&gt;类型的指针，在初始化值之后，则&lt;code&gt;Job&lt;/code&gt;对象就可以通过这样来调用&lt;code&gt;log.Logger&lt;/code&gt;实现的&lt;code&gt;Print&lt;/code&gt;函数了，&lt;code&gt;job.Logger.Print()&lt;/code&gt;。既然&lt;code&gt;Logger&lt;/code&gt;本身是一个指向&lt;code&gt;log.Logger&lt;/code&gt;类型的指针，那我们直接在&lt;code&gt;Job&lt;/code&gt;结构中嵌入一个&lt;code&gt;log.Logger&lt;/code&gt;指针对象，那&lt;code&gt;Job&lt;/code&gt;结构对象不就可以直接调用&lt;code&gt;job.Logger&lt;/code&gt;实现的&lt;code&gt;Print&lt;/code&gt;方法？ 答案是可以的， 如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Job &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Command &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	*log.Logger &lt;span class=&quot;comment&quot;&gt;//嵌入匿名指针类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	job := &amp;amp;Job&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;demo&quot;&lt;/span&gt;, log.New(os.Stderr, &lt;span class=&quot;string&quot;&gt;&quot;Job: &quot;&lt;/span&gt;, log.Ldate)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	job.Print(&lt;span class=&quot;string&quot;&gt;&quot;starting now...&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//直接调用log.Logger实现的Print()方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意在使用&lt;code&gt;log.Logger&lt;/code&gt;之前需要初始化，如果匿名结构实现了某个接口，也相当于使嵌入这个匿名结构的当前结构也实现了这个接口，非常方便高效。&lt;/p&gt;
&lt;h2 id=&quot;u6848_u4F8B_u5206_u6790&quot;&gt;&lt;a href=&quot;#u6848_u4F8B_u5206_u6790&quot; class=&quot;headerlink&quot; title=&quot;案例分析&quot;&gt;&lt;/a&gt;案例分析&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;Go&lt;/code&gt;中参数是默认是值传递,所以从上述&lt;code&gt;User/Player&lt;/code&gt;示例中，你可能注意到在&lt;code&gt;Player&lt;/code&gt;结构中嵌入&lt;code&gt;User&lt;/code&gt;结构指针比直接嵌入&lt;code&gt;User&lt;/code&gt;结构对象更好。确实如果嵌入到结构体比较简单时，使用哪种方法都差不多，如果像现实中&lt;code&gt;User&lt;/code&gt;结构其实非常复杂，那选择传入引用则是更好到选择。修改上述代码如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Id             &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Name, Location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (u *User) Greetings() &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fmt.Sprintf(&lt;span class=&quot;string&quot;&gt;&quot;Hi %s from %s&quot;&lt;/span&gt;,u.Name, u.Location)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	*User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GameId &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述将代码修改为嵌入&lt;code&gt;User&lt;/code&gt;指针，那在调用&lt;code&gt;User&lt;/code&gt;中字段之后，需要对&lt;code&gt;User&lt;/code&gt;先初始化，详情看&lt;a href=&quot;https://github.com/researchlab/go-bootcamp/blob/master/ch03/pass_ptr.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Question: 为&lt;code&gt;User&lt;/code&gt;结构指针类型定义一个&lt;code&gt;Greetings&lt;/code&gt;方法，如何直接去调用它呢？&lt;/li&gt;
&lt;li&gt;Solution:&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Id             &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Name, Location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (u *User) Greetings() &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fmt.Sprintf(&lt;span class=&quot;string&quot;&gt;&quot;Hi %s from %s&quot;&lt;/span&gt;,u.Name, u.Location)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Player &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	*User&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GameId &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; NewPlayer(id &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;, name, location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;, gameId &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) *Player &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;amp;Player&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		User:   &amp;amp;User&amp;#123;id, name, location&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		GameId: gameId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p := NewPlayer(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90404&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(p.Greetings())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述案例通过&lt;code&gt;NewPlayer&lt;/code&gt;方法在使用&lt;code&gt;User&lt;/code&gt;中的&lt;code&gt;Greetings&lt;/code&gt;前，先初始化了&lt;code&gt;User&lt;/code&gt;结构指针,如果在使用前不初始化，则调用&lt;code&gt;Greetings&lt;/code&gt;时，是用一个&lt;code&gt;nil ptr&lt;/code&gt;去调用&lt;code&gt;Greetings&lt;/code&gt;，显然这样调用不成功，所以使用前需要先初始化，得到返回指向这个匿名对象的地址指针对象，才能进一步通过这个指针对象去调用匿名结构中的字段属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 《GO BOOTCAMP》第三章翻译完成，原著第三章出处：&lt;a href=&quot;http://www.golangbootcamp.com/book/types&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chapter 3 Types&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Go&lt;/code&gt;内置类型实战，包括类型转换，类型断言，结构类型，结构继承等内容。&lt;br&gt;
    
    </summary>
    
      <category term="go-bootcamp" scheme="http://www.grdtechs.com/categories/go-bootcamp/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>[译]GO BOOTCAMP 第二章：基本概念实战</title>
    <link href="http://www.grdtechs.com/2016/01/16/go-basics/"/>
    <id>http://www.grdtechs.com/2016/01/16/go-basics/</id>
    <published>2016-01-16T16:54:06.000Z</published>
    <updated>2016-07-14T07:26:17.567Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;如果已经有一定的编程基础，那你只需花几个小时就能学会&lt;code&gt;Go&lt;/code&gt;编程，因此&lt;code&gt;Go&lt;/code&gt;也常被认为是一门“简单易用”的编程语言。Go语言被设计得尽量简洁，它的整个语言规范也一样。在写第一个&lt;code&gt;Go&lt;/code&gt;应用之前，我们先来学习&lt;code&gt;Go&lt;/code&gt;的一些基础概念。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u53D8_u91CF_u53CA_u7C7B_u578B_u63A8_u65AD&quot;&gt;&lt;a href=&quot;#u53D8_u91CF_u53CA_u7C7B_u578B_u63A8_u65AD&quot; class=&quot;headerlink&quot; title=&quot;变量及类型推断&quot;&gt;&lt;/a&gt;变量及类型推断&lt;/h2&gt;&lt;p&gt;用&lt;code&gt;var&lt;/code&gt;关键字声明一个变量列表，其中变量的数据类型Type放在变量名的后面，如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	age &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或着将相同类型的变量写在一行并用逗号隔开,&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name, location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	age &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以一个一个的声明变量,&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; age &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可在&lt;code&gt;var&lt;/code&gt;关键字声明的变量列表中初始化变量，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Prince Oberyn&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	age &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	location &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;Dorne&quot;&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以向下面这样声明初始化变量,&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name, location, age = &lt;span class=&quot;string&quot;&gt;&quot;Prince Oberyn&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Dorne&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在函数内部可以直接用短赋值符号&lt;code&gt;:=&lt;/code&gt;来隐式的声明初始化变量，但是这种短赋值符号只能用于声明局部变量，即只能在函数体内使用,如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name, location := &lt;span class=&quot;string&quot;&gt;&quot;Prince Oberyn&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Dorne&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	age := &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s (%d) of %s&quot;&lt;/span&gt;, name, age, location)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/researchlab/go-bootcamp/blob/master/ch02/short_assign_case.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;br&gt;在&lt;code&gt;Go&lt;/code&gt;语言中，一个变量可以是任意类型，甚至可以将一个函数赋值给一个变量,如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	action := &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//doing something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	action()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 短赋值符号&lt;code&gt;:=&lt;/code&gt;只能用来隐式初始化局部变量，不能在函数体外部使用。&lt;/p&gt;
&lt;h2 id=&quot;u5E38_u91CF&quot;&gt;&lt;a href=&quot;#u5E38_u91CF&quot; class=&quot;headerlink&quot; title=&quot;常量&quot;&gt;&lt;/a&gt;常量&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;Go&lt;/code&gt;语言中，用&lt;code&gt;const&lt;/code&gt;关键字声明常量。常量只能是字符，字符串，布尔值或数值。常量初始化可以通过上下文推断它的类型，但是不能使用短赋值符号&lt;code&gt;:=&lt;/code&gt;对常量进行声明初始化操作，如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Pi = &lt;span class=&quot;number&quot;&gt;3.14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StatusOK                   = &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StatusCreated              = &lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StatusAccepted             = &lt;span class=&quot;number&quot;&gt;202&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StatusNonAuthoritativeInfo = &lt;span class=&quot;number&quot;&gt;203&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StatusNoContent            = &lt;span class=&quot;number&quot;&gt;204&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StatusResetContent         = &lt;span class=&quot;number&quot;&gt;205&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StatusPartialContent       = &lt;span class=&quot;number&quot;&gt;206&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Pi    = &lt;span class=&quot;number&quot;&gt;3.14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Truth = &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Big   = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Small = Big &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Greeting = &lt;span class=&quot;string&quot;&gt;&quot;ハローワールド&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(Greeting)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(Pi)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(Truth)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/researchlab/go-bootcamp/blob/master/ch02/constant_declared.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u6253_u5370_u5E38_u91CF_u548C_u53D8_u91CF&quot;&gt;&lt;a href=&quot;#u6253_u5370_u5E38_u91CF_u548C_u53D8_u91CF&quot; class=&quot;headerlink&quot; title=&quot;打印常量和变量&quot;&gt;&lt;/a&gt;打印常量和变量&lt;/h2&gt;&lt;p&gt;你可以灵活的使用&lt;code&gt;fmt&lt;/code&gt;包提供的&lt;code&gt;print&lt;/code&gt;和&lt;code&gt;println&lt;/code&gt;函数打印一个常量或变量的值,如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cylonModel := &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(cylonModel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可用&lt;code&gt;fmt.Println&lt;/code&gt;换行打印变量，如果要按指定的输出格式打印一个或多个值变量时可以用&lt;code&gt;fmt.Printf&lt;/code&gt;函数,如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	name := &lt;span class=&quot;string&quot;&gt;&quot;Caprica-Six&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	aka := fmt.Sprintf(&lt;span class=&quot;string&quot;&gt;&quot;Number %d&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s is also known as %s&quot;&lt;/span&gt;,name, aka)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u5305_u548C_u5F15_u5165&quot;&gt;&lt;a href=&quot;#u5305_u548C_u5F15_u5165&quot; class=&quot;headerlink&quot; title=&quot;包和引入&quot;&gt;&lt;/a&gt;包和引入&lt;/h2&gt;&lt;p&gt;每个&lt;code&gt;Go&lt;/code&gt;程序都是由&lt;code&gt;packages&lt;/code&gt;组成的，并且以&lt;code&gt;main&lt;/code&gt;包为程序的运行入口，如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello,World!\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果写一个可执行程序（相对于库）,那需要定义一个&lt;code&gt;main&lt;/code&gt; 包的&lt;code&gt;go&lt;/code&gt;文件，&lt;code&gt;main&lt;/code&gt;包中的&lt;code&gt;main&lt;/code&gt;函数就是执行程序的入口。按惯例，包名是相同的导入路径的最后一个元素。例如，引入路径&lt;code&gt;math/rand&lt;/code&gt;，是指引入&lt;code&gt;math/&lt;/code&gt;路径下的&lt;code&gt;rand&lt;/code&gt;包。&lt;br&gt;引入包示例:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;math/rand&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或着引入一个包组:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;math/rand&quot;&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通常，非标准库包使用一个&lt;code&gt;web url&lt;/code&gt;作为命名空间，如我将&lt;code&gt;Rails 4&lt;/code&gt;中使用的一些用于加密的代码和逻辑移植到&lt;code&gt;Go&lt;/code&gt;中，然后将代码包托管到&lt;code&gt;github&lt;/code&gt;的&lt;code&gt;repository&lt;/code&gt;上，如:&lt;a href=&quot;/&quot;&gt;http://github.com/mattetti/goRailsYourself&lt;/a&gt;&lt;br&gt; 那现在可以通过下面的方式来引入提交的这个加密包&lt;code&gt;crypto package&lt;/code&gt;:&lt;br&gt; &lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;github.com/mattetti/goRailsYourself/crypto&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u4EE3_u7801_u4F4D_u7F6E&quot;&gt;&lt;a href=&quot;#u4EE3_u7801_u4F4D_u7F6E&quot; class=&quot;headerlink&quot; title=&quot;代码位置&quot;&gt;&lt;/a&gt;代码位置&lt;/h2&gt;&lt;p&gt;上面的代码片段只是简单的告诉编译器可以在&lt;strong&gt;github.com/mattetti/goRailsYourself/crypto&lt;/strong&gt;路径下获得&lt;code&gt;crypto&lt;/code&gt;这个包，但并不意味着编译器会自动去&lt;code&gt;github&lt;/code&gt;仓库中把这个代码拉下来，那到哪里去找到这个&lt;code&gt;crypto&lt;/code&gt;代码包呢？&lt;br&gt;你需要自己去把代码拉下来，最简单的方法是使用&lt;code&gt;Go&lt;/code&gt;提供的&lt;code&gt;go get&lt;/code&gt;命令,&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go get github.com/mattetti/goRailsYourself/crypto&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当安装&lt;code&gt;Go&lt;/code&gt;时，我们需要设置&lt;code&gt;GOPATH&lt;/code&gt;环境变量, 这个是用来指明二进制执行程序，库文件和你自己代码的存放位置的。执行&lt;code&gt;go get&lt;/code&gt;命令，它会把相应的包文件下载到&lt;code&gt;GOPATH&lt;/code&gt;指定到路径下。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;variable&quot;&gt;$GOPATH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin	pkg	src&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bin&lt;/code&gt;文件夹中包括&lt;code&gt;Go&lt;/code&gt;编译生成到二进制执行文件，你需要将&lt;code&gt;bin&lt;/code&gt;文件夹路径添加到你的系统路径中。&lt;br&gt;&lt;code&gt;pkg&lt;/code&gt;文件夹存放编译生成的对应编译版本的所有库文件使得编译器在不需要重新编译的情况下可以重新链接它们。&lt;br&gt;最后，&lt;code&gt;src&lt;/code&gt;文件夹中按引入路径存放着所有&lt;code&gt;Go&lt;/code&gt;源码,如：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;variable&quot;&gt;$GOPATH&lt;/span&gt;/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bitbucket.org	code.google.com	github.com	launchpad.net&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;variable&quot;&gt;$GOPATH&lt;/span&gt;/src/github.com/mattetti&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;goblin			goRailsYourself		jet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当新建一个项目时，在&lt;code&gt;src&lt;/code&gt;文件夹中推荐按照包引入路径来放置源码文件(如: &lt;strong&gt;github.com/&lt;your username=&quot;&quot;&gt;/&lt;project name=&quot;&quot;&gt;&lt;/project&gt;&lt;/your&gt;&lt;/strong&gt;)&lt;/p&gt;
&lt;h2 id=&quot;u5BFC_u5165_u540D_u5B57&quot;&gt;&lt;a href=&quot;#u5BFC_u5165_u540D_u5B57&quot; class=&quot;headerlink&quot; title=&quot;导入名字&quot;&gt;&lt;/a&gt;导入名字&lt;/h2&gt;&lt;p&gt;导入一个包后，就可以通过名字来引用导入包中的内容（即在包外可以访问到它到变量，方法及函数等）,在&lt;code&gt;Go&lt;/code&gt;中，如果名字首字母大写则这个名字，则这个名字可导入的，可以被导入到其它包中使用，即公有的。如&lt;code&gt;Foo&lt;/code&gt;和&lt;code&gt;FOO&lt;/code&gt;都是可导入的,而&lt;code&gt;foo&lt;/code&gt;则不是可导入的，来看两者的不同:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fmt.Println(math.pi)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;和&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Println(math.Pi)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pi&lt;/code&gt;是可以导入的，可以在包外被调用，是公有的，而&lt;code&gt;pi&lt;/code&gt;则不可以，编译报错提示：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cannot refer to unexported name math.pi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u51FD_u6570_u5F62_u53C2_u540D_2C_u8FD4_u56DE_u503C_uFF0C_u88AB_u547D_u540D_u7684_u8FD4_u56DE_u503C&quot;&gt;&lt;a href=&quot;#u51FD_u6570_u5F62_u53C2_u540D_2C_u8FD4_u56DE_u503C_uFF0C_u88AB_u547D_u540D_u7684_u8FD4_u56DE_u503C&quot; class=&quot;headerlink&quot; title=&quot;函数形参名,返回值，被命名的返回值&quot;&gt;&lt;/a&gt;函数形参名,返回值，被命名的返回值&lt;/h2&gt;&lt;p&gt;一个函数可以有零个或多个形参，也可以有多个返回值。在形参列表中类型放在形参变量的后面，如:&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; add(x &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;, y &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x + y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    fmt.Println(add(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在下面的示例中，可以将多个类型相同的形参一起声明，如&lt;code&gt;x int, y int&lt;/code&gt;可以写成&lt;code&gt;x, y int&lt;/code&gt;，&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; add(x, y &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x + y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    fmt.Println(add(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面示例中，&lt;code&gt;location&lt;/code&gt;函数返回两个&lt;code&gt;string&lt;/code&gt;类型值。&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; location(city &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) (&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; region &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; continent &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; city &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Los Angeles&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Santa Monica&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			region, continent = &lt;span class=&quot;string&quot;&gt;&quot;California&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;New York&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;NYC&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			region, continent = &lt;span class=&quot;string&quot;&gt;&quot;New York&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			region, continent = &lt;span class=&quot;string&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; region, continent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		region, continent := location(&lt;span class=&quot;string&quot;&gt;&quot;Santa Monica&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Matt lives in %s, %s&quot;&lt;/span&gt;, region, continent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Go&lt;/code&gt;语言中，函数可以返回多个值，如果返回参数被命名了，则返回语句可以不需要显示返回相应的返回参数，如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; location(name, city &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) (name, continent &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; city &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;New York&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Chicago&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			continent = &lt;span class=&quot;string&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			continent = &lt;span class=&quot;string&quot;&gt;&quot;Unknown&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		name, continent := location(&lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;LA&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s lives in %s&quot;&lt;/span&gt;, name, continent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是个人推荐，无论返回参数是否被命名了，在返回语句中都显示加上被返回的参数名称&lt;/p&gt;
&lt;h2 id=&quot;u6307_u9488&quot;&gt;&lt;a href=&quot;#u6307_u9488&quot; class=&quot;headerlink&quot; title=&quot;指针&quot;&gt;&lt;/a&gt;指针&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;Go&lt;/code&gt;语言中有指针，但是没有指针运算。结构字段都可以通过一个结构指针进行访问。&lt;code&gt;Go&lt;/code&gt;中指针就像透明的一样，可以用指针直接调用字段和方法。不过&lt;code&gt;Go&lt;/code&gt;默认是按值传递参数（值拷贝），如果想通过引用传递参数，则需要传递指针（或使用&lt;code&gt;slice&lt;/code&gt;和&lt;code&gt;map&lt;/code&gt;等引用结构类型。可以在变量前面加&lt;code&gt;&amp;amp;&lt;/code&gt;符号取得这个变量的地址,在变量前面加&lt;code&gt;*&lt;/code&gt;符号则可以取得这个变量的值。在&lt;code&gt;Go&lt;/code&gt;中方法默认被定义为指针类型而不是值类型（不过方法也可以定义为值类型），通常可以将一个指针赋值给一个变量，如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;client := &amp;amp;http.Client&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;resp, err := client.Get(&lt;span class=&quot;string&quot;&gt;&quot;http://gobootcamp.com&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;u53EF_u53D8_u6027&quot;&gt;&lt;a href=&quot;#u53EF_u53D8_u6027&quot; class=&quot;headerlink&quot; title=&quot;可变性&quot;&gt;&lt;/a&gt;可变性&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;Go&lt;/code&gt;中，只有常量在初始化之后是不可改变的。但注意在&lt;code&gt;Go&lt;/code&gt;函数中参数默认按值传递，在函数体内修改传入的参数值，并不会改变函数外这个参数的值，如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Artist &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Name, Genre &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Songs       &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; newRelease(a Artist) &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.Songs++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.Songs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		me := Artist&amp;#123;Name: &lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;, Genre: &lt;span class=&quot;string&quot;&gt;&quot;Electro&quot;&lt;/span&gt;, Songs: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s released their %dth song\n&quot;&lt;/span&gt;, me.Name, newRelease(me))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s has a total of %d songs&quot;&lt;/span&gt;, me.Name, me.Songs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;results:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Matt released their &lt;span class=&quot;number&quot;&gt;43&lt;/span&gt;th song&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Matt has a total of &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt; songs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的结果并没有真正修改&lt;code&gt;me&lt;/code&gt;变量中的值，是因为上述形参是通过值传递，如果要达到成功修改，则需要借助指针对&lt;code&gt;me&lt;/code&gt;变量进行引用传递，如：&lt;br&gt;&lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Artist &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Name, Genre &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Songs       &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; newRelease(a *Artist) &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.Songs++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.Songs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		me := &amp;amp;Artist&amp;#123;Name: &lt;span class=&quot;string&quot;&gt;&quot;Matt&quot;&lt;/span&gt;, Genre: &lt;span class=&quot;string&quot;&gt;&quot;Electro&quot;&lt;/span&gt;, Songs: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s released their %dth song\n&quot;&lt;/span&gt;, me.Name, newRelease(me))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%s has a total of %d songs&quot;&lt;/span&gt;, me.Name, me.Songs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面两个版本中唯一对不同是第一个版本是值传递，只修改了拷贝不影响变量原值，而第二个版本是引用传递，修改的是同一地址上的内容，所以修改成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 《GO BOOTCAMP》第二章翻译完成，原著第二章出处：&lt;a href=&quot;http://www.golangbootcamp.com/book/basics&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chapter 2 The Basics&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;如果已经有一定的编程基础，那你只需花几个小时就能学会&lt;code&gt;Go&lt;/code&gt;编程，因此&lt;code&gt;Go&lt;/code&gt;也常被认为是一门“简单易用”的编程语言。Go语言被设计得尽量简洁，它的整个语言规范也一样。在写第一个&lt;code&gt;Go&lt;/code&gt;应用之前，我们先来学习&lt;code&gt;Go&lt;/code&gt;的一些基础概念。&lt;br&gt;
    
    </summary>
    
      <category term="go-bootcamp" scheme="http://www.grdtechs.com/categories/go-bootcamp/"/>
    
    
      <category term="golang" scheme="http://www.grdtechs.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>用Hexo+github搭建本站</title>
    <link href="http://www.grdtechs.com/2016/01/15/hexo-blog-1/"/>
    <id>http://www.grdtechs.com/2016/01/15/hexo-blog-1/</id>
    <published>2016-01-15T12:10:10.000Z</published>
    <updated>2016-07-14T07:26:17.571Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;是一个基于&lt;code&gt;Node.js&lt;/code&gt;免费开源的静态博客框架，方便将生成的静态网页托管在&lt;code&gt;github&lt;/code&gt;和&lt;code&gt;Heroku&lt;/code&gt;上，可快速部署，并支持&lt;code&gt;Markdown&lt;/code&gt;写作，这也是选择&lt;code&gt;Hexo&lt;/code&gt;部署本站的理由。无特殊说明，本站所有操作均在&lt;code&gt;Mac OS&lt;/code&gt;下完成。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u642D_u5EFAHexo_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u642D_u5EFAHexo_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;搭建Hexo博客&quot;&gt;&lt;/a&gt;搭建Hexo博客&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;Node.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install node #该命令执行后，自动装好node和npm
$ brew upgrade node #更新node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装完成后 我们测试一下 在任意目录下 创建js文件, 如helloworld.js&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.createServer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res.writeHead(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		res.end(&lt;span class=&quot;string&quot;&gt;&#39;Hello World\n&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;).listen(&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Server running at http://127.0.0.1:1337/&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在终端进入该目录下 输入node helloworld.js&lt;br&gt;  在浏览器中输入 地址 &lt;a href=&quot;http://127.0.0.1:1337/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:1337/&lt;/a&gt; 查看结果 至此 NODEJS 运行环境已经配置好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;hexo&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建本地博客&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo init blog #这里是在/Users/lihong/ 这个目录下执行这个目录
$ cd blog  #pwd 目录为: /Users/lihong/blog
$ npm install
$ hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器输入localhost:4000即可看到搭建的博客,此时只能本地访问，可通过部署到github上，使得在公网同样可以访问。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;部署到&lt;code&gt;github&lt;/code&gt;上&lt;br&gt;注册一个&lt;code&gt;github&lt;/code&gt;账号，在自己&lt;code&gt;github&lt;/code&gt;主页右下角，创建一个新的&lt;code&gt;repository&lt;/code&gt;。例如我的github账号为&lt;code&gt;researchlab&lt;/code&gt;,那么我应该创建的repository名字应该是&lt;code&gt;researchlab.github.io&lt;/code&gt;。&lt;br&gt;编辑&lt;code&gt;_config.yml&lt;/code&gt;(在&lt;code&gt;Users/lihong/blog&lt;/code&gt;目录下)。你在部署时，要把下面的researchlab都换成你的账号名。(没有看到repository:, branch:等字段则加上即可）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deploy:
type: git
repository: https://github.com/researchlab/researchlab.github.io.git
branch: master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;回到/Users/lihong/blog目录下执行如下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo generate #生成静态网页
$ hexo deploy #部署到github上
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  &lt;strong&gt;记住:&lt;/strong&gt; 每次修改本地文件后，需要hexo generate才能保存。每次使用命令时，都要在$pwd/blog目录下。现在可在浏览器访问&lt;code&gt;researchlab.github.io&lt;/code&gt;看到我们到博客了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Hexo常用命令&lt;br&gt;  &lt;code&gt;hexo g&lt;/code&gt; == &lt;code&gt;hexo generate&lt;/code&gt; #生成静态页面&lt;br&gt;  &lt;code&gt;hexo d&lt;/code&gt; == &lt;code&gt;hexo deploy&lt;/code&gt; #部署到远程服务器上（如本站部署到 github)&lt;br&gt;  &lt;code&gt;hexo s&lt;/code&gt; == &lt;code&gt;hexo server&lt;/code&gt; #启动本地服务器&lt;br&gt;  &lt;code&gt;hexo n&lt;/code&gt; == &lt;code&gt;hexo new&lt;/code&gt; #新建一篇文章或一个页面&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u914D_u7F6EHexo_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u914D_u7F6EHexo_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;配置Hexo博客&quot;&gt;&lt;/a&gt;配置Hexo博客&lt;/h2&gt;&lt;p&gt;Hexo站点配置用到两个文件，一个是对整站的配置&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;，另一个是对主题的配置 &lt;code&gt;$pwd/blog/themes/jacman/_config.yml&lt;/code&gt;，我们来分别介绍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对整站的配置&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Hexo Configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Source: https://github.com/hexojs/hexo/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Site&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 朴实的一线码农 #站点名 站点左上角 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subtitle: 十年磨一剑，一步一步脚踏实地的耕种 #站点副标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description: Leehong&#39;s Blog #给搜索引擎看的, 对站点的描述，可以自定义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author: Lee Hong &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;language: zh-CN #页面语言&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timezone:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url: http://www.grdtechs.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink: :year/:month/:day/:title/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink_defaults:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Directory #目录配置 默认即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source_dir: source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public_dir: public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_dir: tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;archive_dir: archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_dir: categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;code_dir: downloads/code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i18n_dir: :lang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip_render:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Writing 文章布局，写作格式定义 默认即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new&lt;span class=&quot;emphasis&quot;&gt;_post_&lt;/span&gt;name: :title.md # File name of new posts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_layout: post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;titlecase: false # Transform title into titlecase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;external_link: true # Open external links in new tab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename_case: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render_drafts: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;post&lt;span class=&quot;emphasis&quot;&gt;_asset_&lt;/span&gt;folder: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;relative_link: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;future: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  line_number: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  auto_detect: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tab_replace:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Category &amp;amp; Tag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_category: uncategorized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Date / Time format 期日格式 默认即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Hexo uses Moment.js to parse and display date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## You can customize the date format as defined in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date_format: YYYY-MM-DD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time_format: HH:mm:ss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Pagination 每页显示的文章数目 默认每页显示10篇&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Set per_page to 0 to disable pagination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;per_page: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pagination_dir: page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Extensions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: jacman &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# Deployment 部署站点到github&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/researchlab/researchlab.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对主题的配置 &lt;code&gt;$pwd/blog/themes/jacman/_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;##### Menu 站点右上角导航栏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;menu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  首页: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  归档: /archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  关于: /about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## you can create `tags` and `categories` folders in `../source`.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## And create a `index.md` file in each of them.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## set `front-matter`as&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## layout: tags (or categories)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## title: tags (or categories)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## ---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Widgets 站点右边栏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;widgets: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    #- github-card&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;intro&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;category&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;links&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;douban&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;rss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;weibo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ## provide eight widgets:github-card,category,tag,rss,archive,tagcloud,links,weibo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### RSS &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rss: /atom.xml ## RSS address.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imglogo:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true             ## display image logo true/false.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  src: #img/logo.png        ## &lt;span class=&quot;code&quot;&gt;`.svg`&lt;/span&gt; and &lt;span class=&quot;code&quot;&gt;`.png`&lt;/span&gt; are recommended,please put image into the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/img`&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;favicon: #img/favicon.ico   ## size:32px*32px,&lt;span class=&quot;code&quot;&gt;`.ico`&lt;/span&gt; is recommended,please put image into the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/img`&lt;/span&gt;.     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apple_icon: #img/jacman.jpg ## size:114px*114px,please put image into the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/img`&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author_img: #img/author.jpg ## size:220px*220px.display author avatar picture.if don&#39;t want to display,please don&#39;t set this.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;banner_img: #img/banner.jpg ## size:1920px*200px+. Banner Picture&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;### Theme Color &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme_color:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    theme: &#39;#2ca6cb&#39;    ##the defaut theme color is blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# 代码高亮主题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# available: default | night&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight_theme: default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### index post is expanding or not &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expand: true           ## default is unexpanding,so you can only see the short description of each post.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  excerpt_link: Read More  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close_aside: false  #close sidebar in post page if true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mathjax: false      #enable mathjax if true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;### Creative Commons License Support, see http://creativecommons.org/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;### you can choose: by , by-nc , by-nc-nd , by-nc-sa , by-nd , by-sa , zero&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;creative_commons: none&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Toc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;toc:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  article: true   ## show contents in article.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  aside: true     ## show contents in aside.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## you can set both of the value to true of neither of them.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## if you don&#39;t want display contents in a specified post,you can modify `front-matter` and add `toc: false`.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Links&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;links:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Linux/c/c++: http://blog.csdn.net/xiaolongwang2010,小龙王2010csdn技术博客&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Comment 添加多说评论&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;duoshuo_shortname: gamedp   ## e.g. Leehong   your duoshuo short name.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;disqus_shortname:     ## e.g. Leehong   your disqus short name.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Share button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jiathis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true ## if you use jiathis as your share tool,the built-in share tool won&#39;t be display.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:  2084050  ## e.g. 2084050 your jiathis ID. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tsina: ## e.g. 2176287895 Your weibo id,It will be used in share button.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Analytics&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google_analytics:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:        ## e.g. UA-46321946-2 your google analytics ID.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  site:      ## e.g. Leehong.me your google analytics site or set the value as auto.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## You MUST upgrade to Universal Analytics first!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## https://developers.google.com/analytics/devguides/collection/upgrade/?hl=zh_CN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu_tongji:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sitecode: ## e.g. e6d1f421bbc9962127a50488f9ed37d1 your baidu tongji site code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cnzz_tongji:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  siteid:    ## e.g. 1253575964 your cnzz tongji site id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Miscellaneous&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ShowCustomFont: true  ## you can change custom font in &lt;span class=&quot;code&quot;&gt;`variable.styl`&lt;/span&gt; and &lt;span class=&quot;code&quot;&gt;`font.styl`&lt;/span&gt; which in the theme folder &lt;span class=&quot;code&quot;&gt;`/jacman/source/css`&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fancybox: true        ## if you use gallery post or want use fancybox please set the value to true.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;totop: true           ## if you want to scroll to top in every post set the value to true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;#### Custom Search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google_cse: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cx:   ## e.g. 018294693190868310296:abnhpuysycw your Custom Search ID.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## https://www.google.com/cse/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## To enable the custom search You must create a &quot;search&quot; folder in &#39;/source&#39; and a &quot;index.md&quot; file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## set the &#39;front-matter&#39; as&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## layout: search &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## title: search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;## ---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baidu_search:     ## http://zn.baidu.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:   ## e.g. &quot;783281470518440642&quot;  for your baidu search id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  site: http://zhannei.baidu.com/cse/search  ## your can change to your site instead of the default site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tinysou_search:     ## http://tinysou.com/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id:  ## e.g. &quot;4ac092ad8d749fdc6293&quot; for your tiny search id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u7528Hexo_u5199_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u7528Hexo_u5199_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;用Hexo写博客&quot;&gt;&lt;/a&gt;用Hexo写博客&lt;/h2&gt;&lt;p&gt;站点配置好了之后，可通过执行如下命令开始写文章并发布&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo new &amp;quot;the_first_post&amp;quot; #在/Users/lihong/blog 目录下执行hexo new 命令
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打开新建的&lt;code&gt;source/_posts/the_first_post.md&lt;/code&gt;, 如下：&lt;br&gt;&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;horizontal_rule&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: the&lt;span class=&quot;emphasis&quot;&gt;_first_&lt;/span&gt;post # 这个是文章的标题,可随意修改,如: 用Hexo+github搭建本站 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-01-15 12:10:10 #发表日期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories: Hexo #文章分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags: [Hexo,Blog] #文章标签,多于一项时用这种格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;description: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;# 这里是正文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/span&gt;&lt;/span&gt; #这后面的正文在首页不予以显示&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;写好之后，执行&lt;code&gt;hexo g&lt;/code&gt; 命令生成静态网页，执行&lt;code&gt;hexo s&lt;/code&gt;启动本地服务器此时可通过localhost:4000在本地浏览器访问,执行&lt;code&gt;hexo d&lt;/code&gt;部署到github上，则可通过公网访问了。&lt;/p&gt;
&lt;h2 id=&quot;u4F18_u5316Hexo_u535A_u5BA2&quot;&gt;&lt;a href=&quot;#u4F18_u5316Hexo_u535A_u5BA2&quot; class=&quot;headerlink&quot; title=&quot;优化Hexo博客&quot;&gt;&lt;/a&gt;优化Hexo博客&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;导航栏添加”关于”&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hexo new page &amp;quot;about&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;到&lt;code&gt;source/about/index.md&lt;/code&gt;编辑内容&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;themes/jacman/_config.yml&lt;/code&gt;中,添加如下：&lt;pre&gt;&lt;code&gt;menu:
    关于: /about
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加RSS&lt;br&gt;hexo提供了RSS的生成插件，需要手动安装和设置。步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装RSS插件到本地：&lt;code&gt;npm install hexo-generator-feed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开启RSS功能：编辑&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;，添加如下代码：&lt;pre&gt;&lt;code&gt;plugins:
    - hexo-generator-feed
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;themes/jacman/_config.yml&lt;/code&gt;中，编辑 &lt;code&gt;rss: /atom.xml&lt;/code&gt;&lt;br&gt;&lt;strong&gt; 注意 &lt;/strong&gt; 如果发现没有生成&lt;code&gt;atom.xml&lt;/code&gt;, 可接着执行&lt;code&gt;npm install hexo-generator-feed --save&lt;/code&gt;即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加sitemap&lt;br&gt;hexo也提供了sitemap到生成插件，与添加RSS插件类似。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装sitemap插件到本地：&lt;code&gt;npm install hexo-generator-sitemap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开启sitmap功能: 编辑&lt;code&gt;$pwd/blog/_config.yml&lt;/code&gt;,添加如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;plugins:
    - hexo-generator-feed
    - hexo-generator-sitemap
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问researchlab.github.io/sitemap.xml即可看到站点地图。不过，sitemap的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到google和百度等搜索引擎提交sitemap.xml。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文章中插入图片&lt;br&gt;使用markdown写文章，插入图片的格式为&lt;code&gt;![图片名称](链接地址)&lt;/code&gt;，这里要说的是链接地址怎么写。对于hexo，有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用本地路径：在&lt;code&gt;$pwd/blog/source&lt;/code&gt;目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为&lt;code&gt;/img/图片名称&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用微博图床，地址:&lt;a href=&quot;http://weibotuchuang.sinaapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://weibotuchuang.sinaapp.com/&lt;/a&gt;，将图片拖入区域中，会生成图片的URL，这就是链接地址。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u95EE_u9898_u89E3_u51B3_u65B9_u6848&quot;&gt;&lt;a href=&quot;#u95EE_u9898_u89E3_u51B3_u65B9_u6848&quot; class=&quot;headerlink&quot; title=&quot;问题解决方案&quot;&gt;&lt;/a&gt;问题解决方案&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;执行&lt;code&gt;Hexo d&lt;/code&gt; 出现&lt;code&gt;ERROR Deployer not found:git&lt;/code&gt;,解决方案：&lt;code&gt;npm install hexo-deployer-git --save&lt;/code&gt; 即可。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u524D_u8A00&quot;&gt;&lt;a href=&quot;#u524D_u8A00&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;是一个基于&lt;code&gt;Node.js&lt;/code&gt;免费开源的静态博客框架，方便将生成的静态网页托管在&lt;code&gt;github&lt;/code&gt;和&lt;code&gt;Heroku&lt;/code&gt;上，可快速部署，并支持&lt;code&gt;Markdown&lt;/code&gt;写作，这也是选择&lt;code&gt;Hexo&lt;/code&gt;部署本站的理由。无特殊说明，本站所有操作均在&lt;code&gt;Mac OS&lt;/code&gt;下完成。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.grdtechs.com/categories/Hexo/"/>
    
    
      <category term="Blog" scheme="http://www.grdtechs.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://www.grdtechs.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
